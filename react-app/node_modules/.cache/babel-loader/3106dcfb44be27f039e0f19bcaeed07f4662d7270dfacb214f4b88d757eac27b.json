{"ast":null,"code":"'use strict';\n\nvar Type = require('../../type');\nfunction resolveJavascriptRegExp(data) {\n  if (null === data) {\n    return false;\n  }\n  if (0 === data.length) {\n    return false;\n  }\n  var regexp = data,\n    tail = /\\/([gim]*)$/.exec(data),\n    modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if ('/' === regexp[0]) {\n    if (tail) {\n      modifiers = tail[1];\n    }\n    if (modifiers.length > 3) {\n      return false;\n    }\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') {\n      return false;\n    }\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n  try {\n    var dummy = new RegExp(regexp, modifiers);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n    tail = /\\/([gim]*)$/.exec(data),\n    modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if ('/' === regexp[0]) {\n    if (tail) {\n      modifiers = tail[1];\n    }\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n  return new RegExp(regexp, modifiers);\n}\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n  if (object.global) {\n    result += 'g';\n  }\n  if (object.multiline) {\n    result += 'm';\n  }\n  if (object.ignoreCase) {\n    result += 'i';\n  }\n  return result;\n}\nfunction isRegExp(object) {\n  return '[object RegExp]' === Object.prototype.toString.call(object);\n}\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});","map":{"version":3,"names":["Type","require","resolveJavascriptRegExp","data","length","regexp","tail","exec","modifiers","slice","dummy","RegExp","error","constructJavascriptRegExp","representJavascriptRegExp","object","result","source","global","multiline","ignoreCase","isRegExp","Object","prototype","toString","call","module","exports","kind","resolve","construct","predicate","represent"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js"],"sourcesContent":["'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (null === data) {\n    return false;\n  }\n\n  if (0 === data.length) {\n    return false;\n  }\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if ('/' === regexp[0]) {\n    if (tail) {\n      modifiers = tail[1];\n    }\n\n    if (modifiers.length > 3) { return false; }\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') { return false; }\n\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  try {\n    var dummy = new RegExp(regexp, modifiers);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if ('/' === regexp[0]) {\n    if (tail) {\n      modifiers = tail[1];\n    }\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) {\n    result += 'g';\n  }\n\n  if (object.multiline) {\n    result += 'm';\n  }\n\n  if (object.ignoreCase) {\n    result += 'i';\n  }\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return '[object RegExp]' === Object.prototype.toString.call(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEhC,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EACrC,IAAI,IAAI,KAAKA,IAAI,EAAE;IACjB,OAAO,KAAK;EACd;EAEA,IAAI,CAAC,KAAKA,IAAI,CAACC,MAAM,EAAE;IACrB,OAAO,KAAK;EACd;EAEA,IAAIC,MAAM,GAAGF,IAAI;IACbG,IAAI,GAAK,aAAa,CAACC,IAAI,CAACJ,IAAI,CAAC;IACjCK,SAAS,GAAG,EAAE;;EAElB;EACA;EACA,IAAI,GAAG,KAAKH,MAAM,CAAC,CAAC,CAAC,EAAE;IACrB,IAAIC,IAAI,EAAE;MACRE,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;IACrB;IAEA,IAAIE,SAAS,CAACJ,MAAM,GAAG,CAAC,EAAE;MAAE,OAAO,KAAK;IAAE;IAC1C;IACA,IAAIC,MAAM,CAACA,MAAM,CAACD,MAAM,GAAGI,SAAS,CAACJ,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAAE,OAAO,KAAK;IAAE;IAE1EC,MAAM,GAAGA,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEJ,MAAM,CAACD,MAAM,GAAGI,SAAS,CAACJ,MAAM,GAAG,CAAC,CAAC;EAChE;EAEA,IAAI;IACF,IAAIM,KAAK,GAAG,IAAIC,MAAM,CAACN,MAAM,EAAEG,SAAS,CAAC;IACzC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;AAEA,SAASC,yBAAyBA,CAACV,IAAI,EAAE;EACvC,IAAIE,MAAM,GAAGF,IAAI;IACbG,IAAI,GAAK,aAAa,CAACC,IAAI,CAACJ,IAAI,CAAC;IACjCK,SAAS,GAAG,EAAE;;EAElB;EACA,IAAI,GAAG,KAAKH,MAAM,CAAC,CAAC,CAAC,EAAE;IACrB,IAAIC,IAAI,EAAE;MACRE,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;IACrB;IACAD,MAAM,GAAGA,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEJ,MAAM,CAACD,MAAM,GAAGI,SAAS,CAACJ,MAAM,GAAG,CAAC,CAAC;EAChE;EAEA,OAAO,IAAIO,MAAM,CAACN,MAAM,EAAEG,SAAS,CAAC;AACtC;AAEA,SAASM,yBAAyBA,CAACC,MAAM,CAAC,aAAa;EACrD,IAAIC,MAAM,GAAG,GAAG,GAAGD,MAAM,CAACE,MAAM,GAAG,GAAG;EAEtC,IAAIF,MAAM,CAACG,MAAM,EAAE;IACjBF,MAAM,IAAI,GAAG;EACf;EAEA,IAAID,MAAM,CAACI,SAAS,EAAE;IACpBH,MAAM,IAAI,GAAG;EACf;EAEA,IAAID,MAAM,CAACK,UAAU,EAAE;IACrBJ,MAAM,IAAI,GAAG;EACf;EAEA,OAAOA,MAAM;AACf;AAEA,SAASK,QAAQA,CAACN,MAAM,EAAE;EACxB,OAAO,iBAAiB,KAAKO,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,MAAM,CAAC;AACrE;AAEAW,MAAM,CAACC,OAAO,GAAG,IAAI3B,IAAI,CAAC,6BAA6B,EAAE;EACvD4B,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE3B,uBAAuB;EAChC4B,SAAS,EAAEjB,yBAAyB;EACpCkB,SAAS,EAAEV,QAAQ;EACnBW,SAAS,EAAElB;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}