{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'merges multiple paths in one if possible';\nexports.params = {\n  collapseRepeated: true,\n  leadingZero: true,\n  negativeExtraSpace: true\n};\nvar path2js = require('./_path.js').path2js,\n  js2path = require('./_path.js').js2path,\n  intersects = require('./_path.js').intersects;\n\n/**\n * Merge multiple Paths into one.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich, Lev Solntsev\n */\nexports.fn = function (item, params) {\n  if (!item.isElem() || item.isEmpty()) return;\n  var prevContentItem = null,\n    prevContentItemKeys = null;\n  item.content = item.content.filter(function (contentItem) {\n    if (prevContentItem && prevContentItem.isElem('path') && prevContentItem.isEmpty() && prevContentItem.hasAttr('d') && contentItem.isElem('path') && contentItem.isEmpty() && contentItem.hasAttr('d')) {\n      if (!prevContentItemKeys) {\n        prevContentItemKeys = Object.keys(prevContentItem.attrs);\n      }\n      var contentItemAttrs = Object.keys(contentItem.attrs),\n        equalData = prevContentItemKeys.length == contentItemAttrs.length && contentItemAttrs.every(function (key) {\n          return key == 'd' || prevContentItem.hasAttr(key) && prevContentItem.attr(key).value == contentItem.attr(key).value;\n        }),\n        prevPathJS = path2js(prevContentItem),\n        curPathJS = path2js(contentItem);\n      if (equalData && !intersects(prevPathJS, curPathJS)) {\n        js2path(prevContentItem, prevPathJS.concat(curPathJS), params);\n        return false;\n      }\n    }\n    prevContentItem = contentItem;\n    prevContentItemKeys = null;\n    return true;\n  });\n};","map":{"version":3,"names":["exports","type","active","description","params","collapseRepeated","leadingZero","negativeExtraSpace","path2js","require","js2path","intersects","fn","item","isElem","isEmpty","prevContentItem","prevContentItemKeys","content","filter","contentItem","hasAttr","Object","keys","attrs","contentItemAttrs","equalData","length","every","key","attr","value","prevPathJS","curPathJS","concat"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/plugins/mergePaths.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'merges multiple paths in one if possible';\n\nexports.params = {\n    collapseRepeated: true,\n    leadingZero: true,\n    negativeExtraSpace: true\n};\n\nvar path2js = require('./_path.js').path2js,\n    js2path = require('./_path.js').js2path,\n    intersects = require('./_path.js').intersects;\n\n/**\n * Merge multiple Paths into one.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich, Lev Solntsev\n */\nexports.fn = function(item, params) {\n\n    if (!item.isElem() || item.isEmpty()) return;\n\n    var prevContentItem = null,\n        prevContentItemKeys = null;\n\n    item.content = item.content.filter(function(contentItem) {\n\n        if (prevContentItem &&\n            prevContentItem.isElem('path') &&\n            prevContentItem.isEmpty() &&\n            prevContentItem.hasAttr('d') &&\n            contentItem.isElem('path') &&\n            contentItem.isEmpty() &&\n            contentItem.hasAttr('d')\n        ) {\n\n            if (!prevContentItemKeys) {\n                prevContentItemKeys = Object.keys(prevContentItem.attrs);\n            }\n\n            var contentItemAttrs = Object.keys(contentItem.attrs),\n                equalData = prevContentItemKeys.length == contentItemAttrs.length &&\n                    contentItemAttrs.every(function(key) {\n                        return key == 'd' ||\n                            prevContentItem.hasAttr(key) &&\n                            prevContentItem.attr(key).value == contentItem.attr(key).value;\n                    }),\n                prevPathJS = path2js(prevContentItem),\n                curPathJS = path2js(contentItem);\n\n            if (equalData && !intersects(prevPathJS, curPathJS)) {\n                js2path(prevContentItem, prevPathJS.concat(curPathJS), params);\n                return false;\n            }\n        }\n\n        prevContentItem = contentItem;\n        prevContentItemKeys = null;\n        return true;\n\n    });\n\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,IAAI,GAAG,SAAS;AAExBD,OAAO,CAACE,MAAM,GAAG,IAAI;AAErBF,OAAO,CAACG,WAAW,GAAG,0CAA0C;AAEhEH,OAAO,CAACI,MAAM,GAAG;EACbC,gBAAgB,EAAE,IAAI;EACtBC,WAAW,EAAE,IAAI;EACjBC,kBAAkB,EAAE;AACxB,CAAC;AAED,IAAIC,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACD,OAAO;EACvCE,OAAO,GAAGD,OAAO,CAAC,YAAY,CAAC,CAACC,OAAO;EACvCC,UAAU,GAAGF,OAAO,CAAC,YAAY,CAAC,CAACE,UAAU;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,OAAO,CAACY,EAAE,GAAG,UAASC,IAAI,EAAET,MAAM,EAAE;EAEhC,IAAI,CAACS,IAAI,CAACC,MAAM,CAAC,CAAC,IAAID,IAAI,CAACE,OAAO,CAAC,CAAC,EAAE;EAEtC,IAAIC,eAAe,GAAG,IAAI;IACtBC,mBAAmB,GAAG,IAAI;EAE9BJ,IAAI,CAACK,OAAO,GAAGL,IAAI,CAACK,OAAO,CAACC,MAAM,CAAC,UAASC,WAAW,EAAE;IAErD,IAAIJ,eAAe,IACfA,eAAe,CAACF,MAAM,CAAC,MAAM,CAAC,IAC9BE,eAAe,CAACD,OAAO,CAAC,CAAC,IACzBC,eAAe,CAACK,OAAO,CAAC,GAAG,CAAC,IAC5BD,WAAW,CAACN,MAAM,CAAC,MAAM,CAAC,IAC1BM,WAAW,CAACL,OAAO,CAAC,CAAC,IACrBK,WAAW,CAACC,OAAO,CAAC,GAAG,CAAC,EAC1B;MAEE,IAAI,CAACJ,mBAAmB,EAAE;QACtBA,mBAAmB,GAAGK,MAAM,CAACC,IAAI,CAACP,eAAe,CAACQ,KAAK,CAAC;MAC5D;MAEA,IAAIC,gBAAgB,GAAGH,MAAM,CAACC,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;QACjDE,SAAS,GAAGT,mBAAmB,CAACU,MAAM,IAAIF,gBAAgB,CAACE,MAAM,IAC7DF,gBAAgB,CAACG,KAAK,CAAC,UAASC,GAAG,EAAE;UACjC,OAAOA,GAAG,IAAI,GAAG,IACbb,eAAe,CAACK,OAAO,CAACQ,GAAG,CAAC,IAC5Bb,eAAe,CAACc,IAAI,CAACD,GAAG,CAAC,CAACE,KAAK,IAAIX,WAAW,CAACU,IAAI,CAACD,GAAG,CAAC,CAACE,KAAK;QACtE,CAAC,CAAC;QACNC,UAAU,GAAGxB,OAAO,CAACQ,eAAe,CAAC;QACrCiB,SAAS,GAAGzB,OAAO,CAACY,WAAW,CAAC;MAEpC,IAAIM,SAAS,IAAI,CAACf,UAAU,CAACqB,UAAU,EAAEC,SAAS,CAAC,EAAE;QACjDvB,OAAO,CAACM,eAAe,EAAEgB,UAAU,CAACE,MAAM,CAACD,SAAS,CAAC,EAAE7B,MAAM,CAAC;QAC9D,OAAO,KAAK;MAChB;IACJ;IAEAY,eAAe,GAAGI,WAAW;IAC7BH,mBAAmB,GAAG,IAAI;IAC1B,OAAO,IAAI;EAEf,CAAC,CAAC;AAEN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}