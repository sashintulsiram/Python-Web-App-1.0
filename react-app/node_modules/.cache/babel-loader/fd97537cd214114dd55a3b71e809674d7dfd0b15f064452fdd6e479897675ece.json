{"ast":null,"code":"'use strict';\n\nvar common = require('../common');\nvar Type = require('../type');\nvar YAML_FLOAT_PATTERN = new RegExp('^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' + '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' + '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' + '|[-+]?\\\\.(?:inf|Inf|INF)' + '|\\\\.(?:nan|NaN|NAN))$');\nfunction resolveYamlFloat(data) {\n  if (null === data) {\n    return false;\n  }\n  var value, sign, base, digits;\n  if (!YAML_FLOAT_PATTERN.test(data)) {\n    return false;\n  }\n  return true;\n}\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n  value = data.replace(/_/g, '').toLowerCase();\n  sign = '-' === value[0] ? -1 : 1;\n  digits = [];\n  if (0 <= '+-'.indexOf(value[0])) {\n    value = value.slice(1);\n  }\n  if ('.inf' === value) {\n    return 1 === sign ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n  } else if ('.nan' === value) {\n    return NaN;\n  } else if (0 <= value.indexOf(':')) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n    value = 0.0;\n    base = 1;\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n    return sign * value;\n  }\n  return sign * parseFloat(value, 10);\n}\nfunction representYamlFloat(object, style) {\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase':\n        return '.nan';\n      case 'uppercase':\n        return '.NAN';\n      case 'camelcase':\n        return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '.inf';\n      case 'uppercase':\n        return '.INF';\n      case 'camelcase':\n        return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '-.inf';\n      case 'uppercase':\n        return '-.INF';\n      case 'camelcase':\n        return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n  return object.toString(10);\n}\nfunction isFloat(object) {\n  return '[object Number]' === Object.prototype.toString.call(object) && (0 !== object % 1 || common.isNegativeZero(object));\n}\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});","map":{"version":3,"names":["common","require","Type","YAML_FLOAT_PATTERN","RegExp","resolveYamlFloat","data","value","sign","base","digits","test","constructYamlFloat","replace","toLowerCase","indexOf","slice","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","NaN","split","forEach","v","unshift","parseFloat","d","representYamlFloat","object","style","isNaN","isNegativeZero","toString","isFloat","Object","prototype","call","module","exports","kind","resolve","construct","predicate","represent","defaultStyle"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/node_modules/js-yaml/lib/js-yaml/type/float.js"],"sourcesContent":["'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  '^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n  '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (null === data) {\n    return false;\n  }\n\n  var value, sign, base, digits;\n\n  if (!YAML_FLOAT_PATTERN.test(data)) {\n    return false;\n  }\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = '-' === value[0] ? -1 : 1;\n  digits = [];\n\n  if (0 <= '+-'.indexOf(value[0])) {\n    value = value.slice(1);\n  }\n\n  if ('.inf' === value) {\n    return (1 === sign) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if ('.nan' === value) {\n    return NaN;\n\n  } else if (0 <= value.indexOf(':')) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\nfunction representYamlFloat(object, style) {\n  if (isNaN(object)) {\n    switch (style) {\n    case 'lowercase':\n      return '.nan';\n    case 'uppercase':\n      return '.NAN';\n    case 'camelcase':\n      return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n    case 'lowercase':\n      return '.inf';\n    case 'uppercase':\n      return '.INF';\n    case 'camelcase':\n      return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n    case 'lowercase':\n      return '-.inf';\n    case 'uppercase':\n      return '-.INF';\n    case 'camelcase':\n      return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n  return object.toString(10);\n}\n\nfunction isFloat(object) {\n  return ('[object Number]' === Object.prototype.toString.call(object)) &&\n         (0 !== object % 1 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}