{"ast":null,"code":"'use strict';\n\nvar EXTEND = require('whet.extend');\nvar JSAPI = module.exports = function (data, parentNode) {\n  EXTEND(this, data);\n  if (parentNode) {\n    Object.defineProperty(this, 'parentNode', {\n      writable: true,\n      value: parentNode\n    });\n  }\n};\n\n/**\n * Perform a deep clone of this node.\n *\n * @return {Object} element\n */\nJSAPI.prototype.clone = function () {\n  var node = this;\n  var nodeData = {};\n  Object.keys(node).forEach(function (key) {\n    if (key != 'content') {\n      nodeData[key] = node[key];\n    }\n  });\n\n  // Deep-clone node data\n  // This is still faster than using EXTEND(true…)\n  nodeData = JSON.parse(JSON.stringify(nodeData));\n\n  // parentNode gets set to a proper object by the parent clone,\n  // but it needs to be true/false now to do the right thing\n  // in the constructor.\n  var clonedNode = new JSAPI(nodeData, !!node.parentNode);\n  if (node.content) {\n    clonedNode.content = node.content.map(function (childNode) {\n      var clonedChild = childNode.clone();\n      clonedChild.parentNode = clonedNode;\n      return clonedChild;\n    });\n  }\n  return clonedNode;\n};\n\n/**\n * Determine if item is an element\n * (any, with a specific name or in a names array).\n *\n * @param {String|Array} [param] element name or names arrays\n * @return {Boolean}\n */\nJSAPI.prototype.isElem = function (param) {\n  if (!param) return !!this.elem;\n  if (Array.isArray(param)) return !!this.elem && param.indexOf(this.elem) > -1;\n  return !!this.elem && this.elem === param;\n};\n\n/**\n * Renames an element\n *\n * @param {String} name new element name\n * @return {Object} element\n */\nJSAPI.prototype.renameElem = function (name) {\n  if (typeof name == 'string' && name != '') this.elem = this.local = name;\n  return this;\n};\n\n/**\n * Determine if element is empty.\n *\n * @return {Boolean}\n */\nJSAPI.prototype.isEmpty = function () {\n  return !this.content || !this.content.length;\n};\n\n/**\n * Changes content by removing elements and/or adding new elements.\n *\n * @param {Number} start Index at which to start changing the content.\n * @param {Number} n Number of elements to remove.\n * @param {Array|Object} [insertion] Elements to add to the content.\n * @return {Array} Removed elements.\n */\nJSAPI.prototype.spliceContent = function (start, n, insertion) {\n  if (arguments.length < 2) return [];\n  if (!Array.isArray(insertion)) insertion = Array.apply(null, arguments).slice(2);\n  insertion.forEach(function (inner) {\n    inner.parentNode = this;\n  }, this);\n  return this.content.splice.apply(this.content, [start, n].concat(insertion));\n};\n\n/**\n * Determine if element has an attribute\n * (any, or by name or by name + value).\n *\n * @param {String} [name] attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Boolean}\n */\nJSAPI.prototype.hasAttr = function (name, val) {\n  if (!this.attrs || !Object.keys(this.attrs).length) return false;\n  if (!arguments.length) return !!this.attrs;\n  if (val !== undefined) return !!this.attrs[name] && this.attrs[name].value === val.toString();\n  return !!this.attrs[name];\n};\n\n/**\n * Get a specific attribute from an element\n * (by name or name + value).\n *\n * @param {String} name attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Object|Undefined}\n */\nJSAPI.prototype.attr = function (name, val) {\n  if (!this.hasAttr() || !arguments.length) return undefined;\n  if (val !== undefined) return this.hasAttr(name, val) ? this.attrs[name] : undefined;\n  return this.attrs[name];\n};\n\n/**\n * Get computed attribute value from an element\n *\n * @param {String} name attribute name\n * @return {Object|Undefined}\n */\nJSAPI.prototype.computedAttr = function (name, val) {\n  /* jshint eqnull: true */\n  if (!arguments.length) return;\n  for (var elem = this; elem && (!elem.hasAttr(name) || !elem.attr(name).value); elem = elem.parentNode);\n  if (val != null) {\n    return elem ? elem.hasAttr(name, val) : false;\n  } else if (elem && elem.hasAttr(name)) {\n    return elem.attrs[name].value;\n  }\n};\n\n/**\n * Remove a specific attribute.\n *\n * @param {String|Array} name attribute name\n * @param {String} [val] attribute value\n * @return {Boolean}\n */\nJSAPI.prototype.removeAttr = function (name, val, recursive) {\n  if (!arguments.length) return false;\n  if (Array.isArray(name)) name.forEach(this.removeAttr, this);\n  if (!this.hasAttr(name)) return false;\n  if (!recursive && val && this.attrs[name].value !== val) return false;\n  delete this.attrs[name];\n  if (!Object.keys(this.attrs).length) delete this.attrs;\n  return true;\n};\n\n/**\n * Add attribute.\n *\n * @param {Object} attr attribute object\n * @return {Object} created attribute\n */\nJSAPI.prototype.addAttr = function (attr) {\n  if (!attr || attr && attr.name === undefined || attr && attr.value === undefined || attr && attr.prefix === undefined || attr && attr.local === undefined) return false;\n  this.attrs = this.attrs || {};\n  this.attrs[attr.name] = attr;\n  return this.attrs[attr.name];\n};\n\n/**\n * Iterates over all attributes.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\nJSAPI.prototype.eachAttr = function (callback, context) {\n  if (!this.hasAttr()) return false;\n  for (var name in this.attrs) {\n    callback.call(context, this.attrs[name]);\n  }\n  return true;\n};\n\n/**\n * Tests whether some attribute passes the test.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\nJSAPI.prototype.someAttr = function (callback, context) {\n  if (!this.hasAttr()) return false;\n  for (var name in this.attrs) {\n    if (callback.call(context, this.attrs[name])) return true;\n  }\n  return false;\n};","map":{"version":3,"names":["EXTEND","require","JSAPI","module","exports","data","parentNode","Object","defineProperty","writable","value","prototype","clone","node","nodeData","keys","forEach","key","JSON","parse","stringify","clonedNode","content","map","childNode","clonedChild","isElem","param","elem","Array","isArray","indexOf","renameElem","name","local","isEmpty","length","spliceContent","start","n","insertion","arguments","apply","slice","inner","splice","concat","hasAttr","val","attrs","undefined","toString","attr","computedAttr","removeAttr","recursive","addAttr","prefix","eachAttr","callback","context","call","someAttr"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/lib/svgo/jsAPI.js"],"sourcesContent":["'use strict';\n\nvar EXTEND = require('whet.extend');\n\nvar JSAPI = module.exports = function(data, parentNode) {\n    EXTEND(this, data);\n    if (parentNode) {\n        Object.defineProperty(this, 'parentNode', {\n            writable: true,\n            value: parentNode\n        });\n    }\n};\n\n/**\n * Perform a deep clone of this node.\n *\n * @return {Object} element\n */\nJSAPI.prototype.clone = function() {\n    var node = this;\n    var nodeData = {};\n\n    Object.keys(node).forEach(function(key) {\n        if (key != 'content') {\n            nodeData[key] = node[key];\n        }\n    });\n\n    // Deep-clone node data\n    // This is still faster than using EXTEND(true…)\n    nodeData = JSON.parse(JSON.stringify(nodeData));\n\n    // parentNode gets set to a proper object by the parent clone,\n    // but it needs to be true/false now to do the right thing\n    // in the constructor.\n    var clonedNode = new JSAPI(nodeData, !!node.parentNode);\n\n    if (node.content) {\n        clonedNode.content = node.content.map(function(childNode) {\n            var clonedChild = childNode.clone();\n            clonedChild.parentNode = clonedNode;\n            return clonedChild;\n        });\n    }\n\n    return clonedNode;\n};\n\n/**\n * Determine if item is an element\n * (any, with a specific name or in a names array).\n *\n * @param {String|Array} [param] element name or names arrays\n * @return {Boolean}\n */\nJSAPI.prototype.isElem = function(param) {\n\n    if (!param) return !!this.elem;\n\n    if (Array.isArray(param)) return !!this.elem && (param.indexOf(this.elem) > -1);\n\n    return !!this.elem && this.elem === param;\n\n};\n\n/**\n * Renames an element\n *\n * @param {String} name new element name\n * @return {Object} element\n */\nJSAPI.prototype.renameElem = function(name) {\n\n    if (typeof name == 'string' && name != '')\n        this.elem = this.local = name;\n\n    return this;\n\n};\n\n/**\n * Determine if element is empty.\n *\n * @return {Boolean}\n */\n JSAPI.prototype.isEmpty = function() {\n\n    return !this.content || !this.content.length;\n\n};\n\n/**\n * Changes content by removing elements and/or adding new elements.\n *\n * @param {Number} start Index at which to start changing the content.\n * @param {Number} n Number of elements to remove.\n * @param {Array|Object} [insertion] Elements to add to the content.\n * @return {Array} Removed elements.\n */\n JSAPI.prototype.spliceContent = function(start, n, insertion) {\n\n    if (arguments.length < 2) return [];\n\n    if (!Array.isArray(insertion))\n        insertion = Array.apply(null, arguments).slice(2);\n\n    insertion.forEach(function(inner) { inner.parentNode = this }, this);\n\n    return this.content.splice.apply(this.content, [start, n].concat(insertion));\n\n\n};\n\n/**\n * Determine if element has an attribute\n * (any, or by name or by name + value).\n *\n * @param {String} [name] attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Boolean}\n */\n JSAPI.prototype.hasAttr = function(name, val) {\n\n    if (!this.attrs || !Object.keys(this.attrs).length) return false;\n\n    if (!arguments.length) return !!this.attrs;\n\n    if (val !== undefined) return !!this.attrs[name] && this.attrs[name].value === val.toString();\n\n    return !!this.attrs[name];\n\n};\n\n/**\n * Get a specific attribute from an element\n * (by name or name + value).\n *\n * @param {String} name attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Object|Undefined}\n */\n JSAPI.prototype.attr = function(name, val) {\n\n    if (!this.hasAttr() || !arguments.length) return undefined;\n\n    if (val !== undefined) return this.hasAttr(name, val) ? this.attrs[name] : undefined;\n\n    return this.attrs[name];\n\n};\n\n/**\n * Get computed attribute value from an element\n *\n * @param {String} name attribute name\n * @return {Object|Undefined}\n */\n JSAPI.prototype.computedAttr = function(name, val) {\n    /* jshint eqnull: true */\n    if (!arguments.length) return;\n\n    for (var elem = this; elem && (!elem.hasAttr(name) || !elem.attr(name).value); elem = elem.parentNode);\n\n    if (val != null) {\n        return elem ? elem.hasAttr(name, val) : false;\n    } else if (elem && elem.hasAttr(name)) {\n        return elem.attrs[name].value;\n    }\n\n};\n\n/**\n * Remove a specific attribute.\n *\n * @param {String|Array} name attribute name\n * @param {String} [val] attribute value\n * @return {Boolean}\n */\n JSAPI.prototype.removeAttr = function(name, val, recursive) {\n\n    if (!arguments.length) return false;\n\n    if (Array.isArray(name)) name.forEach(this.removeAttr, this);\n\n    if (!this.hasAttr(name)) return false;\n\n    if (!recursive && val && this.attrs[name].value !== val) return false;\n\n    delete this.attrs[name];\n\n    if (!Object.keys(this.attrs).length) delete this.attrs;\n\n    return true;\n\n};\n\n/**\n * Add attribute.\n *\n * @param {Object} attr attribute object\n * @return {Object} created attribute\n */\n JSAPI.prototype.addAttr = function(attr) {\n\n    if (!attr ||\n        (attr && attr.name === undefined) ||\n        (attr && attr.value === undefined) ||\n        (attr && attr.prefix === undefined) ||\n        (attr && attr.local === undefined)\n    ) return false;\n\n    this.attrs = this.attrs || {};\n    this.attrs[attr.name] = attr;\n\n    return this.attrs[attr.name];\n\n};\n\n/**\n * Iterates over all attributes.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.eachAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        callback.call(context, this.attrs[name]);\n    }\n\n    return true;\n\n};\n\n/**\n * Tests whether some attribute passes the test.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.someAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        if (callback.call(context, this.attrs[name])) return true;\n    }\n\n    return false;\n\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEnC,IAAIC,KAAK,GAAGC,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,UAAU,EAAE;EACpDN,MAAM,CAAC,IAAI,EAAEK,IAAI,CAAC;EAClB,IAAIC,UAAU,EAAE;IACZC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE;MACtCC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAEJ;IACX,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAJ,KAAK,CAACS,SAAS,CAACC,KAAK,GAAG,YAAW;EAC/B,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,QAAQ,GAAG,CAAC,CAAC;EAEjBP,MAAM,CAACQ,IAAI,CAACF,IAAI,CAAC,CAACG,OAAO,CAAC,UAASC,GAAG,EAAE;IACpC,IAAIA,GAAG,IAAI,SAAS,EAAE;MAClBH,QAAQ,CAACG,GAAG,CAAC,GAAGJ,IAAI,CAACI,GAAG,CAAC;IAC7B;EACJ,CAAC,CAAC;;EAEF;EACA;EACAH,QAAQ,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,QAAQ,CAAC,CAAC;;EAE/C;EACA;EACA;EACA,IAAIO,UAAU,GAAG,IAAInB,KAAK,CAACY,QAAQ,EAAE,CAAC,CAACD,IAAI,CAACP,UAAU,CAAC;EAEvD,IAAIO,IAAI,CAACS,OAAO,EAAE;IACdD,UAAU,CAACC,OAAO,GAAGT,IAAI,CAACS,OAAO,CAACC,GAAG,CAAC,UAASC,SAAS,EAAE;MACtD,IAAIC,WAAW,GAAGD,SAAS,CAACZ,KAAK,CAAC,CAAC;MACnCa,WAAW,CAACnB,UAAU,GAAGe,UAAU;MACnC,OAAOI,WAAW;IACtB,CAAC,CAAC;EACN;EAEA,OAAOJ,UAAU;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,KAAK,CAACS,SAAS,CAACe,MAAM,GAAG,UAASC,KAAK,EAAE;EAErC,IAAI,CAACA,KAAK,EAAE,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EAE9B,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI,IAAKD,KAAK,CAACI,OAAO,CAAC,IAAI,CAACH,IAAI,CAAC,GAAG,CAAC,CAAE;EAE/E,OAAO,CAAC,CAAC,IAAI,CAACA,IAAI,IAAI,IAAI,CAACA,IAAI,KAAKD,KAAK;AAE7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAzB,KAAK,CAACS,SAAS,CAACqB,UAAU,GAAG,UAASC,IAAI,EAAE;EAExC,IAAI,OAAOA,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,EAAE,EACrC,IAAI,CAACL,IAAI,GAAG,IAAI,CAACM,KAAK,GAAGD,IAAI;EAEjC,OAAO,IAAI;AAEf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACC/B,KAAK,CAACS,SAAS,CAACwB,OAAO,GAAG,YAAW;EAElC,OAAO,CAAC,IAAI,CAACb,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACc,MAAM;AAEhD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACClC,KAAK,CAACS,SAAS,CAAC0B,aAAa,GAAG,UAASC,KAAK,EAAEC,CAAC,EAAEC,SAAS,EAAE;EAE3D,IAAIC,SAAS,CAACL,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE;EAEnC,IAAI,CAACP,KAAK,CAACC,OAAO,CAACU,SAAS,CAAC,EACzBA,SAAS,GAAGX,KAAK,CAACa,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;EAErDH,SAAS,CAACxB,OAAO,CAAC,UAAS4B,KAAK,EAAE;IAAEA,KAAK,CAACtC,UAAU,GAAG,IAAI;EAAC,CAAC,EAAE,IAAI,CAAC;EAEpE,OAAO,IAAI,CAACgB,OAAO,CAACuB,MAAM,CAACH,KAAK,CAAC,IAAI,CAACpB,OAAO,EAAE,CAACgB,KAAK,EAAEC,CAAC,CAAC,CAACO,MAAM,CAACN,SAAS,CAAC,CAAC;AAGhF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCtC,KAAK,CAACS,SAAS,CAACoC,OAAO,GAAG,UAASd,IAAI,EAAEe,GAAG,EAAE;EAE3C,IAAI,CAAC,IAAI,CAACC,KAAK,IAAI,CAAC1C,MAAM,CAACQ,IAAI,CAAC,IAAI,CAACkC,KAAK,CAAC,CAACb,MAAM,EAAE,OAAO,KAAK;EAEhE,IAAI,CAACK,SAAS,CAACL,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAACa,KAAK;EAE1C,IAAID,GAAG,KAAKE,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,CAACD,KAAK,CAAChB,IAAI,CAAC,IAAI,IAAI,CAACgB,KAAK,CAAChB,IAAI,CAAC,CAACvB,KAAK,KAAKsC,GAAG,CAACG,QAAQ,CAAC,CAAC;EAE7F,OAAO,CAAC,CAAC,IAAI,CAACF,KAAK,CAAChB,IAAI,CAAC;AAE7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC/B,KAAK,CAACS,SAAS,CAACyC,IAAI,GAAG,UAASnB,IAAI,EAAEe,GAAG,EAAE;EAExC,IAAI,CAAC,IAAI,CAACD,OAAO,CAAC,CAAC,IAAI,CAACN,SAAS,CAACL,MAAM,EAAE,OAAOc,SAAS;EAE1D,IAAIF,GAAG,KAAKE,SAAS,EAAE,OAAO,IAAI,CAACH,OAAO,CAACd,IAAI,EAAEe,GAAG,CAAC,GAAG,IAAI,CAACC,KAAK,CAAChB,IAAI,CAAC,GAAGiB,SAAS;EAEpF,OAAO,IAAI,CAACD,KAAK,CAAChB,IAAI,CAAC;AAE3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACC/B,KAAK,CAACS,SAAS,CAAC0C,YAAY,GAAG,UAASpB,IAAI,EAAEe,GAAG,EAAE;EAChD;EACA,IAAI,CAACP,SAAS,CAACL,MAAM,EAAE;EAEvB,KAAK,IAAIR,IAAI,GAAG,IAAI,EAAEA,IAAI,KAAK,CAACA,IAAI,CAACmB,OAAO,CAACd,IAAI,CAAC,IAAI,CAACL,IAAI,CAACwB,IAAI,CAACnB,IAAI,CAAC,CAACvB,KAAK,CAAC,EAAEkB,IAAI,GAAGA,IAAI,CAACtB,UAAU,CAAC;EAEtG,IAAI0C,GAAG,IAAI,IAAI,EAAE;IACb,OAAOpB,IAAI,GAAGA,IAAI,CAACmB,OAAO,CAACd,IAAI,EAAEe,GAAG,CAAC,GAAG,KAAK;EACjD,CAAC,MAAM,IAAIpB,IAAI,IAAIA,IAAI,CAACmB,OAAO,CAACd,IAAI,CAAC,EAAE;IACnC,OAAOL,IAAI,CAACqB,KAAK,CAAChB,IAAI,CAAC,CAACvB,KAAK;EACjC;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACCR,KAAK,CAACS,SAAS,CAAC2C,UAAU,GAAG,UAASrB,IAAI,EAAEe,GAAG,EAAEO,SAAS,EAAE;EAEzD,IAAI,CAACd,SAAS,CAACL,MAAM,EAAE,OAAO,KAAK;EAEnC,IAAIP,KAAK,CAACC,OAAO,CAACG,IAAI,CAAC,EAAEA,IAAI,CAACjB,OAAO,CAAC,IAAI,CAACsC,UAAU,EAAE,IAAI,CAAC;EAE5D,IAAI,CAAC,IAAI,CAACP,OAAO,CAACd,IAAI,CAAC,EAAE,OAAO,KAAK;EAErC,IAAI,CAACsB,SAAS,IAAIP,GAAG,IAAI,IAAI,CAACC,KAAK,CAAChB,IAAI,CAAC,CAACvB,KAAK,KAAKsC,GAAG,EAAE,OAAO,KAAK;EAErE,OAAO,IAAI,CAACC,KAAK,CAAChB,IAAI,CAAC;EAEvB,IAAI,CAAC1B,MAAM,CAACQ,IAAI,CAAC,IAAI,CAACkC,KAAK,CAAC,CAACb,MAAM,EAAE,OAAO,IAAI,CAACa,KAAK;EAEtD,OAAO,IAAI;AAEf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACC/C,KAAK,CAACS,SAAS,CAAC6C,OAAO,GAAG,UAASJ,IAAI,EAAE;EAEtC,IAAI,CAACA,IAAI,IACJA,IAAI,IAAIA,IAAI,CAACnB,IAAI,KAAKiB,SAAU,IAChCE,IAAI,IAAIA,IAAI,CAAC1C,KAAK,KAAKwC,SAAU,IACjCE,IAAI,IAAIA,IAAI,CAACK,MAAM,KAAKP,SAAU,IAClCE,IAAI,IAAIA,IAAI,CAAClB,KAAK,KAAKgB,SAAU,EACpC,OAAO,KAAK;EAEd,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACA,KAAK,CAACG,IAAI,CAACnB,IAAI,CAAC,GAAGmB,IAAI;EAE5B,OAAO,IAAI,CAACH,KAAK,CAACG,IAAI,CAACnB,IAAI,CAAC;AAEhC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACC/B,KAAK,CAACS,SAAS,CAAC+C,QAAQ,GAAG,UAASC,QAAQ,EAAEC,OAAO,EAAE;EAEpD,IAAI,CAAC,IAAI,CAACb,OAAO,CAAC,CAAC,EAAE,OAAO,KAAK;EAEjC,KAAK,IAAId,IAAI,IAAI,IAAI,CAACgB,KAAK,EAAE;IACzBU,QAAQ,CAACE,IAAI,CAACD,OAAO,EAAE,IAAI,CAACX,KAAK,CAAChB,IAAI,CAAC,CAAC;EAC5C;EAEA,OAAO,IAAI;AAEf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACC/B,KAAK,CAACS,SAAS,CAACmD,QAAQ,GAAG,UAASH,QAAQ,EAAEC,OAAO,EAAE;EAEpD,IAAI,CAAC,IAAI,CAACb,OAAO,CAAC,CAAC,EAAE,OAAO,KAAK;EAEjC,KAAK,IAAId,IAAI,IAAI,IAAI,CAACgB,KAAK,EAAE;IACzB,IAAIU,QAAQ,CAACE,IAAI,CAACD,OAAO,EAAE,IAAI,CAACX,KAAK,CAAChB,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;EAC7D;EAEA,OAAO,KAAK;AAEhB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}