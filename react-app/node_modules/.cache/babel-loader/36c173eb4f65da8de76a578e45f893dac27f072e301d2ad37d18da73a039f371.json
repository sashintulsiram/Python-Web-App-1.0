{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'converts colors: rgb() to #rrggbb and #rrggbb to #rgb';\nexports.params = {\n  names2hex: true,\n  rgb2hex: true,\n  shorthex: true,\n  shortname: true\n};\nvar collections = require('./_collections'),\n  rNumber = '([+-]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)%?)',\n  rComma = '\\\\s*,\\\\s*',\n  regRGB = new RegExp('^rgb\\\\(\\\\s*' + rNumber + rComma + rNumber + rComma + rNumber + '\\\\s*\\\\)$'),\n  regHEX = /^\\#(([a-fA-F0-9])\\2){3}$/;\n\n/**\n * Convert different colors formats in element attributes to hex.\n *\n * @see http://www.w3.org/TR/SVG/types.html#DataTypeColor\n * @see http://www.w3.org/TR/SVG/single-page.html#types-ColorKeywords\n *\n * @example\n * Convert color name keyword to long hex:\n * fuchsia ➡ #ff00ff\n *\n * Convert rgb() to long hex:\n * rgb(255, 0, 255) ➡ #ff00ff\n * rgb(50%, 100, 100%) ➡ #7f64ff\n *\n * Convert long hex to short hex:\n * #aabbcc ➡ #abc\n *\n * Convert hex to short name\n * #000080 ➡ navy\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function (item, params) {\n  if (item.elem) {\n    item.eachAttr(function (attr) {\n      if (collections.colorsProps.indexOf(attr.name) > -1) {\n        var val = attr.value,\n          match;\n\n        // Convert color name keyword to long hex\n        if (params.names2hex && val.toLowerCase() in collections.colorsNames) {\n          val = collections.colorsNames[val];\n        }\n\n        // Convert rgb() to long hex\n        if (params.rgb2hex && (match = val.match(regRGB))) {\n          match = match.slice(1, 4).map(function (m) {\n            if (m.indexOf('%') > -1) m = Math.round(parseFloat(m) * 2.55);\n            return Math.max(0, Math.min(m, 255));\n          });\n          val = rgb2hex(match);\n        }\n\n        // Convert long hex to short hex\n        if (params.shorthex && (match = val.match(regHEX))) {\n          val = '#' + match[0][1] + match[0][3] + match[0][5];\n        }\n\n        // Convert hex to short name\n        if (params.shortname && val in collections.colorsShortNames) {\n          val = collections.colorsShortNames[val];\n        }\n        attr.value = val;\n      }\n    });\n  }\n};\n\n/**\n * Convert [r, g, b] to #rrggbb.\n *\n * @see https://gist.github.com/983535\n *\n * @example\n * rgb2hex([255, 255, 255]) // '#ffffff'\n *\n * @param {Array} rgb [r, g, b]\n * @return {String} #rrggbb\n *\n * @author Jed Schmidt\n */\nfunction rgb2hex(rgb) {\n  return '#' + ('00000' + (rgb[0] << 16 | rgb[1] << 8 | rgb[2]).toString(16)).slice(-6).toUpperCase();\n}","map":{"version":3,"names":["exports","type","active","description","params","names2hex","rgb2hex","shorthex","shortname","collections","require","rNumber","rComma","regRGB","RegExp","regHEX","fn","item","elem","eachAttr","attr","colorsProps","indexOf","name","val","value","match","toLowerCase","colorsNames","slice","map","m","Math","round","parseFloat","max","min","colorsShortNames","rgb","toString","toUpperCase"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/plugins/convertColors.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'converts colors: rgb() to #rrggbb and #rrggbb to #rgb';\n\nexports.params = {\n    names2hex: true,\n    rgb2hex: true,\n    shorthex: true,\n    shortname: true\n};\n\nvar collections = require('./_collections'),\n    rNumber = '([+-]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)%?)',\n    rComma = '\\\\s*,\\\\s*',\n    regRGB = new RegExp('^rgb\\\\(\\\\s*' + rNumber + rComma + rNumber + rComma + rNumber + '\\\\s*\\\\)$'),\n    regHEX = /^\\#(([a-fA-F0-9])\\2){3}$/;\n\n/**\n * Convert different colors formats in element attributes to hex.\n *\n * @see http://www.w3.org/TR/SVG/types.html#DataTypeColor\n * @see http://www.w3.org/TR/SVG/single-page.html#types-ColorKeywords\n *\n * @example\n * Convert color name keyword to long hex:\n * fuchsia ➡ #ff00ff\n *\n * Convert rgb() to long hex:\n * rgb(255, 0, 255) ➡ #ff00ff\n * rgb(50%, 100, 100%) ➡ #7f64ff\n *\n * Convert long hex to short hex:\n * #aabbcc ➡ #abc\n *\n * Convert hex to short name\n * #000080 ➡ navy\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.elem) {\n\n        item.eachAttr(function(attr) {\n\n            if (collections.colorsProps.indexOf(attr.name) > -1) {\n\n                var val = attr.value,\n                    match;\n\n                // Convert color name keyword to long hex\n                if (params.names2hex && val.toLowerCase() in collections.colorsNames) {\n                    val = collections.colorsNames[val];\n                }\n\n                // Convert rgb() to long hex\n                if (params.rgb2hex && (match = val.match(regRGB))) {\n                    match = match.slice(1, 4).map(function(m) {\n                        if (m.indexOf('%') > -1)\n                            m = Math.round(parseFloat(m) * 2.55);\n\n                        return Math.max(0, Math.min(m, 255));\n                    });\n\n                    val = rgb2hex(match);\n                }\n\n                // Convert long hex to short hex\n                if (params.shorthex && (match = val.match(regHEX))) {\n                    val = '#' + match[0][1] + match[0][3] + match[0][5];\n                }\n\n                // Convert hex to short name\n                if (params.shortname && val in collections.colorsShortNames) {\n                    val = collections.colorsShortNames[val];\n                }\n\n                attr.value = val;\n\n            }\n\n        });\n\n    }\n\n};\n\n/**\n * Convert [r, g, b] to #rrggbb.\n *\n * @see https://gist.github.com/983535\n *\n * @example\n * rgb2hex([255, 255, 255]) // '#ffffff'\n *\n * @param {Array} rgb [r, g, b]\n * @return {String} #rrggbb\n *\n * @author Jed Schmidt\n */\nfunction rgb2hex(rgb) {\n    return '#' + ('00000' + (rgb[0] << 16 | rgb[1] << 8 | rgb[2]).toString(16)).slice(-6).toUpperCase();\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,IAAI,GAAG,SAAS;AAExBD,OAAO,CAACE,MAAM,GAAG,IAAI;AAErBF,OAAO,CAACG,WAAW,GAAG,uDAAuD;AAE7EH,OAAO,CAACI,MAAM,GAAG;EACbC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE;AACf,CAAC;AAED,IAAIC,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;EACvCC,OAAO,GAAG,mCAAmC;EAC7CC,MAAM,GAAG,WAAW;EACpBC,MAAM,GAAG,IAAIC,MAAM,CAAC,aAAa,GAAGH,OAAO,GAAGC,MAAM,GAAGD,OAAO,GAAGC,MAAM,GAAGD,OAAO,GAAG,UAAU,CAAC;EAC/FI,MAAM,GAAG,0BAA0B;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,OAAO,CAACgB,EAAE,GAAG,UAASC,IAAI,EAAEb,MAAM,EAAE;EAEhC,IAAIa,IAAI,CAACC,IAAI,EAAE;IAEXD,IAAI,CAACE,QAAQ,CAAC,UAASC,IAAI,EAAE;MAEzB,IAAIX,WAAW,CAACY,WAAW,CAACC,OAAO,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QAEjD,IAAIC,GAAG,GAAGJ,IAAI,CAACK,KAAK;UAChBC,KAAK;;QAET;QACA,IAAItB,MAAM,CAACC,SAAS,IAAImB,GAAG,CAACG,WAAW,CAAC,CAAC,IAAIlB,WAAW,CAACmB,WAAW,EAAE;UAClEJ,GAAG,GAAGf,WAAW,CAACmB,WAAW,CAACJ,GAAG,CAAC;QACtC;;QAEA;QACA,IAAIpB,MAAM,CAACE,OAAO,KAAKoB,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACb,MAAM,CAAC,CAAC,EAAE;UAC/Ca,KAAK,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,UAASC,CAAC,EAAE;YACtC,IAAIA,CAAC,CAACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACnBS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACH,CAAC,CAAC,GAAG,IAAI,CAAC;YAExC,OAAOC,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACI,GAAG,CAACL,CAAC,EAAE,GAAG,CAAC,CAAC;UACxC,CAAC,CAAC;UAEFP,GAAG,GAAGlB,OAAO,CAACoB,KAAK,CAAC;QACxB;;QAEA;QACA,IAAItB,MAAM,CAACG,QAAQ,KAAKmB,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACX,MAAM,CAAC,CAAC,EAAE;UAChDS,GAAG,GAAG,GAAG,GAAGE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD;;QAEA;QACA,IAAItB,MAAM,CAACI,SAAS,IAAIgB,GAAG,IAAIf,WAAW,CAAC4B,gBAAgB,EAAE;UACzDb,GAAG,GAAGf,WAAW,CAAC4B,gBAAgB,CAACb,GAAG,CAAC;QAC3C;QAEAJ,IAAI,CAACK,KAAK,GAAGD,GAAG;MAEpB;IAEJ,CAAC,CAAC;EAEN;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASlB,OAAOA,CAACgC,GAAG,EAAE;EAClB,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,CAACA,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC,EAAEV,KAAK,CAAC,CAAC,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;AACvG"},"metadata":{},"sourceType":"script","externalDependencies":[]}