{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDummy, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n\n  // Represents a  raw node\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\n    // Initializes a new instance of `XMLDummy`\n\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    constructor(parent) {\n      super(parent);\n      this.type = NodeType.Dummy;\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return '';\n    }\n  };\n}).call(this);","map":{"version":3,"names":["NodeType","XMLDummy","XMLNode","require","module","exports","constructor","parent","type","Dummy","clone","Object","create","toString","options","call"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/react-app/node_modules/xmlbuilder/lib/XMLDummy.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDummy, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents a  raw node\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\n    // Initializes a new instance of `XMLDummy`\n\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    constructor(parent) {\n      super(parent);\n      this.type = NodeType.Dummy;\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return '';\n    }\n\n  };\n\n}).call(this);\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,QAAQ,EAAEC,QAAQ,EAAEC,OAAO;EAE/BA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;EAE9BH,QAAQ,GAAGG,OAAO,CAAC,YAAY,CAAC;;EAEhC;EACAC,MAAM,CAACC,OAAO,GAAGJ,QAAQ,GAAG,MAAMA,QAAQ,SAASC,OAAO,CAAC;IACzD;;IAEA;IACA;IACA;IACA;IACAI,WAAWA,CAACC,MAAM,EAAE;MAClB,KAAK,CAACA,MAAM,CAAC;MACb,IAAI,CAACC,IAAI,GAAGR,QAAQ,CAACS,KAAK;IAC5B;;IAEA;IACAC,KAAKA,CAAA,EAAG;MACN,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5B;;IAEA;;IAEA;IACA;IACA;IACA;IACAC,QAAQA,CAACC,OAAO,EAAE;MAChB,OAAO,EAAE;IACX;EAEF,CAAC;AAEH,CAAC,EAAEC,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}