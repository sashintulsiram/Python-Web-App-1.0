{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n  ({\n    isObject\n  } = require('./Utility'));\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n\n  // Represents an entity declaration in the DTD\n  module.exports = XMLDTDEntity = function () {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n          this.internal = false;\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n    }\n    ;\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function () {\n        return this.nData || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function () {\n        return null;\n      }\n    });\n    return XMLDTDEntity;\n  }.call(this);\n}).call(this);","map":{"version":3,"names":["NodeType","XMLDTDEntity","XMLNode","isObject","require","module","exports","constructor","parent","pe","name","value","Error","debugInfo","stringify","type","EntityDeclaration","dtdEntityValue","internal","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","toString","options","writer","dtdEntity","filterOptions","Object","defineProperty","prototype","get","call"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/react-app/node_modules/xmlbuilder/lib/XMLDTDEntity.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an entity declaration in the DTD\n  module.exports = XMLDTDEntity = (function() {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n          this.internal = false;\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDTDEntity;\n\n  }).call(this);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}