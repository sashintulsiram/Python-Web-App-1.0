{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar ConvertSvg = require('./svgconverter');\nvar server = require('./server');\n/**\n * Will open port 8000 to copy transformed svg to a usable React component\n * For CommonJS\n * @param {string} path - path to svg file or file itself\n * @returns {Promise}\n */\n\nfunction read_File_CommonJS(_x) {\n  return _read_File_CommonJS.apply(this, arguments);\n}\n/**\n * Will open port 8000 to copy transformed svg to a usable React component\n * For CommonJS\n * @param {string} string - path to svg file or file itself\n * @returns {String}\n */\n\nfunction _read_File_CommonJS() {\n  _read_File_CommonJS = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(path) {\n    var fs, svg, REACTsvg;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fs = require('fs').promises;\n            _context.next = 3;\n            return fs.readFile(path, 'utf8');\n          case 3:\n            svg = _context.sent;\n            REACTsvg = new ConvertSvg(svg).findAndReplace();\n            server(REACTsvg.forCopy); // Retruns transformed svg also for terminal copying for testing.\n\n            return _context.abrupt(\"return\", REACTsvg);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _read_File_CommonJS.apply(this, arguments);\n}\nfunction from_string_CommonJS(string) {\n  var REACTsvg = new ConvertSvg(string).findAndReplace();\n  server(REACTsvg.forCopy); // Retruns transformed svg also for terminal copying for testing.\n\n  return REACTsvg;\n}\n/**\n * For browsers\n * @param {string} string - string\n * @returns {Object[]}\n */\n\nfunction from_string_ES2016(string) {\n  var _require = require('../components/StringToJSX'),\n    StringToJSX = _require.StringToJSX;\n  var REACTsvg = new ConvertSvg(string).findAndReplace();\n  return StringToJSX(REACTsvg, 'fromString');\n}\n/**\n* For browsers only\n* @param {string} path - path to svg file or file itself\n* @returns {Promise<Array>}\n*/\n\nfunction read_File_ES2016(_x2) {\n  return _read_File_ES.apply(this, arguments);\n}\nfunction _read_File_ES() {\n  _read_File_ES = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(path) {\n    var _require2, StringToJSX, res, svg, REACTsvg;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _require2 = require('../components/StringToJSX'), StringToJSX = _require2.StringToJSX; // Will make VueJS svg resuable component from here\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(path);\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return res.text();\n          case 7:\n            svg = _context2.sent;\n            REACTsvg = new ConvertSvg(svg).findAndReplace();\n            return _context2.abrupt(\"return\", StringToJSX(REACTsvg, 'fromFile'));\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", _context2.t0);\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 12]]);\n  }));\n  return _read_File_ES.apply(this, arguments);\n}\nmodule.exports = {\n  read_File_ES2016: read_File_ES2016,\n  from_string_ES2016: from_string_ES2016,\n  read_File_CommonJS: read_File_CommonJS,\n  from_string_CommonJS: from_string_CommonJS\n};","map":{"version":3,"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","ConvertSvg","server","read_File_CommonJS","_x","_read_File_CommonJS","apply","arguments","mark","_callee","path","fs","svg","REACTsvg","wrap","_callee$","_context","prev","next","promises","readFile","sent","findAndReplace","forCopy","abrupt","stop","from_string_CommonJS","string","from_string_ES2016","_require","StringToJSX","read_File_ES2016","_x2","_read_File_ES","_callee2","_require2","res","_callee2$","_context2","fetch","text","t0","module","exports"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/react-app/node_modules/convert-svg-react/lib/converter/controller.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar ConvertSvg = require('./svgconverter');\n\nvar server = require('./server');\n/**\n * Will open port 8000 to copy transformed svg to a usable React component\n * For CommonJS\n * @param {string} path - path to svg file or file itself\n * @returns {Promise}\n */\n\n\nfunction read_File_CommonJS(_x) {\n  return _read_File_CommonJS.apply(this, arguments);\n}\n/**\n * Will open port 8000 to copy transformed svg to a usable React component\n * For CommonJS\n * @param {string} string - path to svg file or file itself\n * @returns {String}\n */\n\n\nfunction _read_File_CommonJS() {\n  _read_File_CommonJS = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(path) {\n    var fs, svg, REACTsvg;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fs = require('fs').promises;\n            _context.next = 3;\n            return fs.readFile(path, 'utf8');\n\n          case 3:\n            svg = _context.sent;\n            REACTsvg = new ConvertSvg(svg).findAndReplace();\n            server(REACTsvg.forCopy); // Retruns transformed svg also for terminal copying for testing.\n\n            return _context.abrupt(\"return\", REACTsvg);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _read_File_CommonJS.apply(this, arguments);\n}\n\nfunction from_string_CommonJS(string) {\n  var REACTsvg = new ConvertSvg(string).findAndReplace();\n  server(REACTsvg.forCopy); // Retruns transformed svg also for terminal copying for testing.\n\n  return REACTsvg;\n}\n/**\n * For browsers\n * @param {string} string - string\n * @returns {Object[]}\n */\n\n\nfunction from_string_ES2016(string) {\n  var _require = require('../components/StringToJSX'),\n      StringToJSX = _require.StringToJSX;\n\n  var REACTsvg = new ConvertSvg(string).findAndReplace();\n  return StringToJSX(REACTsvg, 'fromString');\n}\n/**\n* For browsers only\n* @param {string} path - path to svg file or file itself\n* @returns {Promise<Array>}\n*/\n\n\nfunction read_File_ES2016(_x2) {\n  return _read_File_ES.apply(this, arguments);\n}\n\nfunction _read_File_ES() {\n  _read_File_ES = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(path) {\n    var _require2, StringToJSX, res, svg, REACTsvg;\n\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _require2 = require('../components/StringToJSX'), StringToJSX = _require2.StringToJSX; // Will make VueJS svg resuable component from here\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(path);\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return res.text();\n\n          case 7:\n            svg = _context2.sent;\n            REACTsvg = new ConvertSvg(svg).findAndReplace();\n            return _context2.abrupt(\"return\", StringToJSX(REACTsvg, 'fromFile'));\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 12]]);\n  }));\n  return _read_File_ES.apply(this, arguments);\n}\n\nmodule.exports = {\n  read_File_ES2016: read_File_ES2016,\n  from_string_ES2016: from_string_ES2016,\n  read_File_CommonJS: read_File_CommonJS,\n  from_string_CommonJS: from_string_CommonJS\n};"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpF,IAAIC,YAAY,GAAGF,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAEhF,IAAIE,kBAAkB,GAAGH,sBAAsB,CAACC,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAEnG,IAAIG,UAAU,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASK,kBAAkBA,CAACC,EAAE,EAAE;EAC9B,OAAOC,mBAAmB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASF,mBAAmBA,CAAA,EAAG;EAC7BA,mBAAmB,GAAG,CAAC,CAAC,EAAEL,kBAAkB,CAAC,SAAS,CAAC,GAAG,aAAaD,YAAY,CAAC,SAAS,CAAC,CAACS,IAAI,CAAC,SAASC,OAAOA,CAACC,IAAI,EAAE;IACzH,IAAIC,EAAE,EAAEC,GAAG,EAAEC,QAAQ;IACrB,OAAOd,YAAY,CAAC,SAAS,CAAC,CAACe,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;MAC9D,OAAO,CAAC,EAAE;QACR,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;UACnC,KAAK,CAAC;YACJP,EAAE,GAAGb,OAAO,CAAC,IAAI,CAAC,CAACqB,QAAQ;YAC3BH,QAAQ,CAACE,IAAI,GAAG,CAAC;YACjB,OAAOP,EAAE,CAACS,QAAQ,CAACV,IAAI,EAAE,MAAM,CAAC;UAElC,KAAK,CAAC;YACJE,GAAG,GAAGI,QAAQ,CAACK,IAAI;YACnBR,QAAQ,GAAG,IAAIZ,UAAU,CAACW,GAAG,CAAC,CAACU,cAAc,CAAC,CAAC;YAC/CpB,MAAM,CAACW,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC;;YAE1B,OAAOP,QAAQ,CAACQ,MAAM,CAAC,QAAQ,EAAEX,QAAQ,CAAC;UAE5C,KAAK,CAAC;UACN,KAAK,KAAK;YACR,OAAOG,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1B;MACF;IACF,CAAC,EAAEhB,OAAO,CAAC;EACb,CAAC,CAAC,CAAC;EACH,OAAOJ,mBAAmB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AACnD;AAEA,SAASmB,oBAAoBA,CAACC,MAAM,EAAE;EACpC,IAAId,QAAQ,GAAG,IAAIZ,UAAU,CAAC0B,MAAM,CAAC,CAACL,cAAc,CAAC,CAAC;EACtDpB,MAAM,CAACW,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC;;EAE1B,OAAOV,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASe,kBAAkBA,CAACD,MAAM,EAAE;EAClC,IAAIE,QAAQ,GAAG/B,OAAO,CAAC,2BAA2B,CAAC;IAC/CgC,WAAW,GAAGD,QAAQ,CAACC,WAAW;EAEtC,IAAIjB,QAAQ,GAAG,IAAIZ,UAAU,CAAC0B,MAAM,CAAC,CAACL,cAAc,CAAC,CAAC;EACtD,OAAOQ,WAAW,CAACjB,QAAQ,EAAE,YAAY,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASkB,gBAAgBA,CAACC,GAAG,EAAE;EAC7B,OAAOC,aAAa,CAAC3B,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAC7C;AAEA,SAAS0B,aAAaA,CAAA,EAAG;EACvBA,aAAa,GAAG,CAAC,CAAC,EAAEjC,kBAAkB,CAAC,SAAS,CAAC,GAAG,aAAaD,YAAY,CAAC,SAAS,CAAC,CAACS,IAAI,CAAC,SAAS0B,QAAQA,CAACxB,IAAI,EAAE;IACpH,IAAIyB,SAAS,EAAEL,WAAW,EAAEM,GAAG,EAAExB,GAAG,EAAEC,QAAQ;IAE9C,OAAOd,YAAY,CAAC,SAAS,CAAC,CAACe,IAAI,CAAC,SAASuB,SAASA,CAACC,SAAS,EAAE;MAChE,OAAO,CAAC,EAAE;QACR,QAAQA,SAAS,CAACrB,IAAI,GAAGqB,SAAS,CAACpB,IAAI;UACrC,KAAK,CAAC;YACJiB,SAAS,GAAGrC,OAAO,CAAC,2BAA2B,CAAC,EAAEgC,WAAW,GAAGK,SAAS,CAACL,WAAW,CAAC,CAAC;;YAEvFQ,SAAS,CAACrB,IAAI,GAAG,CAAC;YAClBqB,SAAS,CAACpB,IAAI,GAAG,CAAC;YAClB,OAAOqB,KAAK,CAAC7B,IAAI,CAAC;UAEpB,KAAK,CAAC;YACJ0B,GAAG,GAAGE,SAAS,CAACjB,IAAI;YACpBiB,SAAS,CAACpB,IAAI,GAAG,CAAC;YAClB,OAAOkB,GAAG,CAACI,IAAI,CAAC,CAAC;UAEnB,KAAK,CAAC;YACJ5B,GAAG,GAAG0B,SAAS,CAACjB,IAAI;YACpBR,QAAQ,GAAG,IAAIZ,UAAU,CAACW,GAAG,CAAC,CAACU,cAAc,CAAC,CAAC;YAC/C,OAAOgB,SAAS,CAACd,MAAM,CAAC,QAAQ,EAAEM,WAAW,CAACjB,QAAQ,EAAE,UAAU,CAAC,CAAC;UAEtE,KAAK,EAAE;YACLyB,SAAS,CAACrB,IAAI,GAAG,EAAE;YACnBqB,SAAS,CAACG,EAAE,GAAGH,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACpC,OAAOA,SAAS,CAACd,MAAM,CAAC,QAAQ,EAAEc,SAAS,CAACG,EAAE,CAAC;UAEjD,KAAK,EAAE;UACP,KAAK,KAAK;YACR,OAAOH,SAAS,CAACb,IAAI,CAAC,CAAC;QAC3B;MACF;IACF,CAAC,EAAES,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,CAAC;EACH,OAAOD,aAAa,CAAC3B,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;AAC7C;AAEAmC,MAAM,CAACC,OAAO,GAAG;EACfZ,gBAAgB,EAAEA,gBAAgB;EAClCH,kBAAkB,EAAEA,kBAAkB;EACtCzB,kBAAkB,EAAEA,kBAAkB;EACtCuB,oBAAoB,EAAEA;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}