{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType,\n    WriterState,\n    XMLStreamWriter,\n    XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLWriterBase = require('./XMLWriterBase');\n  WriterState = require('./WriterState');\n\n  // Prints XML nodes to a stream\n  module.exports = XMLStreamWriter = class XMLStreamWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStreamWriter`\n\n    // `stream` output stream\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(stream, options) {\n      super(options);\n      this.stream = stream;\n    }\n    endline(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return super.endline(node, options, level);\n      }\n    }\n    document(doc, options) {\n      var child, i, j, k, len1, len2, ref, ref1, results;\n      ref = doc.children;\n      // set a flag so that we don't insert a newline after the last root level node \n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len2 = ref1.length; k < len2; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    }\n    cdata(node, options, level) {\n      return this.stream.write(super.cdata(node, options, level));\n    }\n    comment(node, options, level) {\n      return this.stream.write(super.comment(node, options, level));\n    }\n    declaration(node, options, level) {\n      return this.stream.write(super.declaration(node, options, level));\n    }\n    docType(node, options, level) {\n      var child, j, len1, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      // external identifier\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, j, len, len1, name, prettySuppressed, r, ratt, ref, ref1, ref2, rline;\n      level || (level = 0);\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      this.stream.write(r);\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function (e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && firstChildNode.value != null) {\n        // do not indent text-only nodes\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        // inner tags\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n    processingInstruction(node, options, level) {\n      return this.stream.write(super.processingInstruction(node, options, level));\n    }\n    raw(node, options, level) {\n      return this.stream.write(super.raw(node, options, level));\n    }\n    text(node, options, level) {\n      return this.stream.write(super.text(node, options, level));\n    }\n    dtdAttList(node, options, level) {\n      return this.stream.write(super.dtdAttList(node, options, level));\n    }\n    dtdElement(node, options, level) {\n      return this.stream.write(super.dtdElement(node, options, level));\n    }\n    dtdEntity(node, options, level) {\n      return this.stream.write(super.dtdEntity(node, options, level));\n    }\n    dtdNotation(node, options, level) {\n      return this.stream.write(super.dtdNotation(node, options, level));\n    }\n  };\n}).call(this);","map":{"version":3,"names":["NodeType","WriterState","XMLStreamWriter","XMLWriterBase","hasProp","hasOwnProperty","require","module","exports","constructor","stream","options","endline","node","level","isLastRootNode","state","CloseTag","document","doc","child","i","j","k","len1","len2","ref","ref1","results","children","length","filterOptions","push","writeChildNode","cdata","write","comment","declaration","docType","openNode","OpenTag","indent","root","name","pubID","sysID","InsideTag","spaceBeforeSlash","None","closeNode","element","att","attLen","childNodeCount","firstChildNode","len","prettySuppressed","r","ratt","ref2","rline","pretty","width","attribs","call","attribute","every","e","type","Text","Raw","value","allowEmpty","suppressPrettyCount","processingInstruction","raw","text","dtdAttList","dtdElement","dtdEntity","dtdNotation"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/react-app/node_modules/xmlbuilder/lib/XMLStreamWriter.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  // Prints XML nodes to a stream\n  module.exports = XMLStreamWriter = class XMLStreamWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStreamWriter`\n\n    // `stream` output stream\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(stream, options) {\n      super(options);\n      this.stream = stream;\n    }\n\n    endline(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return super.endline(node, options, level);\n      }\n    }\n\n    document(doc, options) {\n      var child, i, j, k, len1, len2, ref, ref1, results;\n      ref = doc.children;\n      // set a flag so that we don't insert a newline after the last root level node \n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len2 = ref1.length; k < len2; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    }\n\n    cdata(node, options, level) {\n      return this.stream.write(super.cdata(node, options, level));\n    }\n\n    comment(node, options, level) {\n      return this.stream.write(super.comment(node, options, level));\n    }\n\n    declaration(node, options, level) {\n      return this.stream.write(super.declaration(node, options, level));\n    }\n\n    docType(node, options, level) {\n      var child, j, len1, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      // external identifier\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, j, len, len1, name, prettySuppressed, r, ratt, ref, ref1, ref2, rline;\n      level || (level = 0);\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      this.stream.write(r);\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        // do not indent text-only nodes\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        // inner tags\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    processingInstruction(node, options, level) {\n      return this.stream.write(super.processingInstruction(node, options, level));\n    }\n\n    raw(node, options, level) {\n      return this.stream.write(super.raw(node, options, level));\n    }\n\n    text(node, options, level) {\n      return this.stream.write(super.text(node, options, level));\n    }\n\n    dtdAttList(node, options, level) {\n      return this.stream.write(super.dtdAttList(node, options, level));\n    }\n\n    dtdElement(node, options, level) {\n      return this.stream.write(super.dtdElement(node, options, level));\n    }\n\n    dtdEntity(node, options, level) {\n      return this.stream.write(super.dtdEntity(node, options, level));\n    }\n\n    dtdNotation(node, options, level) {\n      return this.stream.write(super.dtdNotation(node, options, level));\n    }\n\n  };\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}