{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = false;\nexports.description = 'rounds list of values to the fixed precision';\nexports.params = {\n  floatPrecision: 3,\n  leadingZero: true,\n  defaultPx: true,\n  convertToPx: true\n};\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n  regSeparator = /\\s+,?\\s*|,\\s*/,\n  removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n  absoluteLengths = {\n    // relative to px\n    cm: 96 / 2.54,\n    mm: 9600 / 2.54,\n    in: 96,\n    pt: 4 / 3,\n    pc: 16\n  };\n\n/**\n * Round list of values to the fixed precision.\n *\n * @example\n * <svg viewBox=\"0 0 200.28423 200.28423\" enable-background=\"new 0 0 200.28423 200.28423\">\n *         ⬇\n * <svg viewBox=\"0 0 200.284 200.284\" enable-background=\"new 0 0 200.284 200.284\">\n *\n *\n * <polygon points=\"208.250977 77.1308594 223.069336 ... \"/>\n *         ⬇\n * <polygon points=\"208.251 77.131 223.069 ... \"/>\n *\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author kiyopikko\n */\nexports.fn = function (item, params) {\n  if (item.hasAttr('points')) {\n    roundValues(item.attrs.points);\n  }\n  if (item.hasAttr('enable-background')) {\n    roundValues(item.attrs['enable-background']);\n  }\n  if (item.hasAttr('viewBox')) {\n    roundValues(item.attrs.viewBox);\n  }\n  if (item.hasAttr('stroke-dasharray')) {\n    roundValues(item.attrs['stroke-dasharray']);\n  }\n  if (item.hasAttr('dx')) {\n    roundValues(item.attrs.dx);\n  }\n  if (item.hasAttr('dy')) {\n    roundValues(item.attrs.dy);\n  }\n  if (item.hasAttr('x')) {\n    roundValues(item.attrs.x);\n  }\n  if (item.hasAttr('y')) {\n    roundValues(item.attrs.y);\n  }\n  function roundValues($prop) {\n    var num,\n      units,\n      match,\n      matchNew,\n      lists = $prop.value,\n      listsArr = lists.split(regSeparator),\n      roundedListArr = [],\n      roundedList;\n    listsArr.forEach(function (elem) {\n      match = elem.match(regNumericValues);\n      matchNew = elem.match(/new/);\n\n      // if attribute value matches regNumericValues\n      if (match) {\n        // round it to the fixed precision\n        num = +(+match[1]).toFixed(params.floatPrecision), units = match[3] || '';\n\n        // convert absolute values to pixels\n        if (params.convertToPx && units && units in absoluteLengths) {\n          var pxNum = +(absoluteLengths[units] * match[1]).toFixed(params.floatPrecision);\n          if (String(pxNum).length < match[0].length) num = pxNum, units = 'px';\n        }\n\n        // and remove leading zero\n        if (params.leadingZero) {\n          num = removeLeadingZero(num);\n        }\n\n        // remove default 'px' units\n        if (params.defaultPx && units === 'px') {\n          units = '';\n        }\n        roundedListArr.push(num + units);\n      }\n      // if attribute value is \"new\"(only enable-background).\n      else if (matchNew) {\n        roundedListArr.push('new');\n      }\n    });\n    roundedList = roundedListArr.join(' ');\n    $prop.value = roundedList;\n  }\n};","map":{"version":3,"names":["exports","type","active","description","params","floatPrecision","leadingZero","defaultPx","convertToPx","regNumericValues","regSeparator","removeLeadingZero","require","absoluteLengths","cm","mm","in","pt","pc","fn","item","hasAttr","roundValues","attrs","points","viewBox","dx","dy","x","y","$prop","num","units","match","matchNew","lists","value","listsArr","split","roundedListArr","roundedList","forEach","elem","toFixed","pxNum","String","length","push","join"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/plugins/cleanupListOfValues.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = false;\n\nexports.description = 'rounds list of values to the fixed precision';\n\nexports.params = {\n    floatPrecision: 3,\n    leadingZero: true,\n    defaultPx: true,\n    convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    regSeparator = /\\s+,?\\s*|,\\s*/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = { // relative to px\n        cm: 96/2.54,\n        mm: 9600/2.54,\n        in: 96,\n        pt: 4/3,\n        pc: 16\n    };\n\n/**\n * Round list of values to the fixed precision.\n *\n * @example\n * <svg viewBox=\"0 0 200.28423 200.28423\" enable-background=\"new 0 0 200.28423 200.28423\">\n *         ⬇\n * <svg viewBox=\"0 0 200.284 200.284\" enable-background=\"new 0 0 200.284 200.284\">\n *\n *\n * <polygon points=\"208.250977 77.1308594 223.069336 ... \"/>\n *         ⬇\n * <polygon points=\"208.251 77.131 223.069 ... \"/>\n *\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author kiyopikko\n */\nexports.fn = function(item, params) {\n\n\n    if ( item.hasAttr('points') ) {\n        roundValues(item.attrs.points);\n    }\n\n    if ( item.hasAttr('enable-background') ) {\n        roundValues(item.attrs['enable-background']);\n    }\n\n    if ( item.hasAttr('viewBox') ) {\n        roundValues(item.attrs.viewBox);\n    }\n\n    if ( item.hasAttr('stroke-dasharray') ) {\n        roundValues(item.attrs['stroke-dasharray']);\n    }\n\n    if ( item.hasAttr('dx') ) {\n        roundValues(item.attrs.dx);\n    }\n\n    if ( item.hasAttr('dy') ) {\n        roundValues(item.attrs.dy);\n    }\n\n    if ( item.hasAttr('x') ) {\n        roundValues(item.attrs.x);\n    }\n\n    if ( item.hasAttr('y') ) {\n        roundValues(item.attrs.y);\n    }\n\n\n    function roundValues($prop){\n\n        var num, units,\n            match,\n            matchNew,\n            lists = $prop.value,\n            listsArr = lists.split(regSeparator),\n            roundedListArr = [],\n            roundedList;\n\n        listsArr.forEach(function(elem){\n\n            match = elem.match(regNumericValues);\n            matchNew = elem.match(/new/);\n\n             // if attribute value matches regNumericValues\n            if(match){\n\n                // round it to the fixed precision\n                num = +(+match[1]).toFixed(params.floatPrecision),\n                units = match[3] || '';\n\n                // convert absolute values to pixels\n                if (params.convertToPx && units && (units in absoluteLengths)) {\n                    var pxNum = +(absoluteLengths[units] * match[1]).toFixed(params.floatPrecision);\n\n                    if (String(pxNum).length < match[0].length)\n                        num = pxNum,\n                        units = 'px';\n                }\n\n                 // and remove leading zero\n                if (params.leadingZero) {\n                    num = removeLeadingZero(num);\n                }\n\n                // remove default 'px' units\n                if (params.defaultPx && units === 'px') {\n                    units = '';\n                }\n\n                roundedListArr.push(num+units);\n\n            }\n            // if attribute value is \"new\"(only enable-background).\n            else if(matchNew){\n\n                roundedListArr.push('new');\n\n            }\n\n        });\n\n        roundedList = roundedListArr.join(' ');\n        $prop.value = roundedList;\n\n    }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}