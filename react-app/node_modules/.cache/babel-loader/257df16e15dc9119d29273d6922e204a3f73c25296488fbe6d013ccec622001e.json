{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\nexports.params = {\n  newlines: true,\n  trim: true,\n  spaces: true\n};\nvar regNewlinesNeedSpace = /(\\S)\\n(\\S)/g,\n  regNewlines = /\\n/g,\n  regSpaces = /\\s{2,}/g;\n\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function (item, params) {\n  if (item.isElem()) {\n    item.eachAttr(function (attr) {\n      if (params.newlines) {\n        // new line which requires a space instead of themselve\n        attr.value = attr.value.replace(regNewlinesNeedSpace, function (match, p1, p2) {\n          return p1 + ' ' + p2;\n        });\n\n        // simple new line\n        attr.value = attr.value.replace(regNewlines, '');\n      }\n      if (params.trim) {\n        attr.value = attr.value.trim();\n      }\n      if (params.spaces) {\n        attr.value = attr.value.replace(regSpaces, ' ');\n      }\n    });\n  }\n};","map":{"version":3,"names":["exports","type","active","description","params","newlines","trim","spaces","regNewlinesNeedSpace","regNewlines","regSpaces","fn","item","isElem","eachAttr","attr","value","replace","match","p1","p2"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/plugins/cleanupAttrs.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\n\nexports.params = {\n    newlines: true,\n    trim: true,\n    spaces: true\n};\n\nvar regNewlinesNeedSpace = /(\\S)\\n(\\S)/g,\n    regNewlines = /\\n/g,\n    regSpaces = /\\s{2,}/g;\n\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.isElem()) {\n\n        item.eachAttr(function(attr) {\n\n            if (params.newlines) {\n                // new line which requires a space instead of themselve\n                attr.value = attr.value.replace(regNewlinesNeedSpace, function(match, p1, p2) {\n                    return p1 + ' ' + p2;\n                });\n\n                // simple new line\n                attr.value = attr.value.replace(regNewlines, '');\n            }\n\n            if (params.trim) {\n                attr.value = attr.value.trim();\n            }\n\n            if (params.spaces) {\n                attr.value = attr.value.replace(regSpaces, ' ');\n            }\n\n        });\n\n    }\n\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,IAAI,GAAG,SAAS;AAExBD,OAAO,CAACE,MAAM,GAAG,IAAI;AAErBF,OAAO,CAACG,WAAW,GAAG,kEAAkE;AAExFH,OAAO,CAACI,MAAM,GAAG;EACbC,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE;AACZ,CAAC;AAED,IAAIC,oBAAoB,GAAG,aAAa;EACpCC,WAAW,GAAG,KAAK;EACnBC,SAAS,GAAG,SAAS;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,OAAO,CAACW,EAAE,GAAG,UAASC,IAAI,EAAER,MAAM,EAAE;EAEhC,IAAIQ,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;IAEfD,IAAI,CAACE,QAAQ,CAAC,UAASC,IAAI,EAAE;MAEzB,IAAIX,MAAM,CAACC,QAAQ,EAAE;QACjB;QACAU,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACT,oBAAoB,EAAE,UAASU,KAAK,EAAEC,EAAE,EAAEC,EAAE,EAAE;UAC1E,OAAOD,EAAE,GAAG,GAAG,GAAGC,EAAE;QACxB,CAAC,CAAC;;QAEF;QACAL,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACR,WAAW,EAAE,EAAE,CAAC;MACpD;MAEA,IAAIL,MAAM,CAACE,IAAI,EAAE;QACbS,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACV,IAAI,CAAC,CAAC;MAClC;MAEA,IAAIF,MAAM,CAACG,MAAM,EAAE;QACfQ,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACP,SAAS,EAAE,GAAG,CAAC;MACnD;IAEJ,CAAC,CAAC;EAEN;AAEJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}