{"ast":null,"code":"'use strict';\n\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @param {String} str input string\n * @param {String} type Data URI type\n * @return {String} output string\n */\nexports.encodeSVGDatauri = function (str, type) {\n  var prefix = 'data:image/svg+xml';\n\n  // base64\n  if (!type || type === 'base64') {\n    prefix += ';base64,';\n    str = prefix + new Buffer(str).toString('base64');\n\n    // URI encoded\n  } else if (type === 'enc') {\n    str = prefix + ',' + encodeURIComponent(str);\n\n    // unencoded\n  } else if (type === 'unenc') {\n    str = prefix + ',' + str;\n  }\n  return str;\n};\n\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @param {string} str input string\n * @return {String} output string\n */\nexports.decodeSVGDatauri = function (str) {\n  var prefix = 'data:image/svg+xml';\n\n  // base64\n  if (str.substring(0, 26) === prefix + ';base64,') {\n    str = new Buffer(str.substring(26), 'base64').toString('utf8');\n\n    // URI encoded\n  } else if (str.substring(0, 20) === prefix + ',%') {\n    str = decodeURIComponent(str.substring(19));\n\n    // unencoded\n  } else if (str.substring(0, 20) === prefix + ',<') {\n    str = str.substring(19);\n  }\n  return str;\n};\nexports.intersectArrays = function (a, b) {\n  return a.filter(function (n) {\n    return b.indexOf(n) > -1;\n  });\n};\nexports.cleanupOutData = function (data, params) {\n  var str = '',\n    delimiter,\n    prev;\n  data.forEach(function (item, i) {\n    // space delimiter by default\n    delimiter = ' ';\n\n    // no extra space in front of first number\n    if (i === 0) {\n      delimiter = '';\n    }\n\n    // no extra space in front of negative number or\n    // in front of a floating number if a previous number is floating too\n    if (params.negativeExtraSpace && (item < 0 || item > 0 && item < 1 && prev % 1 !== 0)) {\n      delimiter = '';\n    }\n\n    // save prev item value\n    prev = item;\n\n    // remove floating-point numbers leading zeros\n    // 0.5 → .5\n    // -0.5 → -.5\n    if (params.leadingZero) {\n      item = removeLeadingZero(item);\n    }\n    str += delimiter + item;\n  });\n  return str;\n};\n\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @param {Float} num input number\n *\n * @return {String} output number as string\n */\nvar removeLeadingZero = exports.removeLeadingZero = function (num) {\n  if (num > 0 && num < 1) {\n    num = ('' + num).slice(1);\n  } else if (num < 0 && num > -1) {\n    num = '-' + ('' + num).slice(2);\n  }\n  return num;\n};","map":{"version":3,"names":["exports","encodeSVGDatauri","str","type","prefix","Buffer","toString","encodeURIComponent","decodeSVGDatauri","substring","decodeURIComponent","intersectArrays","a","b","filter","n","indexOf","cleanupOutData","data","params","delimiter","prev","forEach","item","i","negativeExtraSpace","leadingZero","removeLeadingZero","num","slice"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/lib/svgo/tools.js"],"sourcesContent":["'use strict';\n\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @param {String} str input string\n * @param {String} type Data URI type\n * @return {String} output string\n */\nexports.encodeSVGDatauri = function(str, type) {\n\n    var prefix = 'data:image/svg+xml';\n\n    // base64\n    if (!type || type === 'base64') {\n\n        prefix += ';base64,';\n\n        str = prefix + new Buffer(str).toString('base64');\n\n    // URI encoded\n    } else if (type === 'enc') {\n\n        str = prefix + ',' + encodeURIComponent(str);\n\n    // unencoded\n    } else if (type === 'unenc') {\n\n        str = prefix + ',' + str;\n\n    }\n\n    return str;\n\n};\n\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @param {string} str input string\n * @return {String} output string\n */\nexports.decodeSVGDatauri = function(str) {\n\n    var prefix = 'data:image/svg+xml';\n\n    // base64\n    if (str.substring(0, 26) === (prefix + ';base64,')) {\n\n        str = new Buffer(str.substring(26), 'base64').toString('utf8');\n\n    // URI encoded\n    } else if (str.substring(0, 20) === (prefix + ',%')) {\n\n        str = decodeURIComponent(str.substring(19));\n\n    // unencoded\n    } else if (str.substring(0, 20) === (prefix + ',<')) {\n\n        str = str.substring(19);\n\n    }\n\n    return str;\n\n};\n\nexports.intersectArrays = function(a, b) {\n    return a.filter(function(n) {\n        return b.indexOf(n) > -1;\n    });\n};\n\nexports.cleanupOutData = function(data, params) {\n\n    var str = '',\n        delimiter,\n        prev;\n\n    data.forEach(function(item, i) {\n\n        // space delimiter by default\n        delimiter = ' ';\n\n        // no extra space in front of first number\n        if (i === 0) {\n            delimiter = '';\n        }\n\n        // no extra space in front of negative number or\n        // in front of a floating number if a previous number is floating too\n        if (\n            params.negativeExtraSpace &&\n            (item < 0 ||\n             (item > 0 && item < 1 && prev % 1 !== 0)\n            )\n        ) {\n            delimiter = '';\n        }\n\n        // save prev item value\n        prev = item;\n\n        // remove floating-point numbers leading zeros\n        // 0.5 → .5\n        // -0.5 → -.5\n        if (params.leadingZero) {\n            item = removeLeadingZero(item);\n        }\n\n        str += delimiter + item;\n\n    });\n\n    return str;\n\n};\n\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @param {Float} num input number\n *\n * @return {String} output number as string\n */\nvar removeLeadingZero = exports.removeLeadingZero = function(num) {\n\n    if (num > 0 && num < 1) {\n        num = ('' + num).slice(1);\n    } else if (num < 0 && num > -1) {\n        num = '-' + ('' + num).slice(2);\n    }\n\n    return num;\n\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,gBAAgB,GAAG,UAASC,GAAG,EAAEC,IAAI,EAAE;EAE3C,IAAIC,MAAM,GAAG,oBAAoB;;EAEjC;EACA,IAAI,CAACD,IAAI,IAAIA,IAAI,KAAK,QAAQ,EAAE;IAE5BC,MAAM,IAAI,UAAU;IAEpBF,GAAG,GAAGE,MAAM,GAAG,IAAIC,MAAM,CAACH,GAAG,CAAC,CAACI,QAAQ,CAAC,QAAQ,CAAC;;IAErD;EACA,CAAC,MAAM,IAAIH,IAAI,KAAK,KAAK,EAAE;IAEvBD,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGG,kBAAkB,CAACL,GAAG,CAAC;;IAEhD;EACA,CAAC,MAAM,IAAIC,IAAI,KAAK,OAAO,EAAE;IAEzBD,GAAG,GAAGE,MAAM,GAAG,GAAG,GAAGF,GAAG;EAE5B;EAEA,OAAOA,GAAG;AAEd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAF,OAAO,CAACQ,gBAAgB,GAAG,UAASN,GAAG,EAAE;EAErC,IAAIE,MAAM,GAAG,oBAAoB;;EAEjC;EACA,IAAIF,GAAG,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAML,MAAM,GAAG,UAAW,EAAE;IAEhDF,GAAG,GAAG,IAAIG,MAAM,CAACH,GAAG,CAACO,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAACH,QAAQ,CAAC,MAAM,CAAC;;IAElE;EACA,CAAC,MAAM,IAAIJ,GAAG,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAML,MAAM,GAAG,IAAK,EAAE;IAEjDF,GAAG,GAAGQ,kBAAkB,CAACR,GAAG,CAACO,SAAS,CAAC,EAAE,CAAC,CAAC;;IAE/C;EACA,CAAC,MAAM,IAAIP,GAAG,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAML,MAAM,GAAG,IAAK,EAAE;IAEjDF,GAAG,GAAGA,GAAG,CAACO,SAAS,CAAC,EAAE,CAAC;EAE3B;EAEA,OAAOP,GAAG;AAEd,CAAC;AAEDF,OAAO,CAACW,eAAe,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EACrC,OAAOD,CAAC,CAACE,MAAM,CAAC,UAASC,CAAC,EAAE;IACxB,OAAOF,CAAC,CAACG,OAAO,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC;AAEDf,OAAO,CAACiB,cAAc,GAAG,UAASC,IAAI,EAAEC,MAAM,EAAE;EAE5C,IAAIjB,GAAG,GAAG,EAAE;IACRkB,SAAS;IACTC,IAAI;EAERH,IAAI,CAACI,OAAO,CAAC,UAASC,IAAI,EAAEC,CAAC,EAAE;IAE3B;IACAJ,SAAS,GAAG,GAAG;;IAEf;IACA,IAAII,CAAC,KAAK,CAAC,EAAE;MACTJ,SAAS,GAAG,EAAE;IAClB;;IAEA;IACA;IACA,IACID,MAAM,CAACM,kBAAkB,KACxBF,IAAI,GAAG,CAAC,IACPA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,CAAC,IAAIF,IAAI,GAAG,CAAC,KAAK,CAAE,CACxC,EACH;MACED,SAAS,GAAG,EAAE;IAClB;;IAEA;IACAC,IAAI,GAAGE,IAAI;;IAEX;IACA;IACA;IACA,IAAIJ,MAAM,CAACO,WAAW,EAAE;MACpBH,IAAI,GAAGI,iBAAiB,CAACJ,IAAI,CAAC;IAClC;IAEArB,GAAG,IAAIkB,SAAS,GAAGG,IAAI;EAE3B,CAAC,CAAC;EAEF,OAAOrB,GAAG;AAEd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIyB,iBAAiB,GAAG3B,OAAO,CAAC2B,iBAAiB,GAAG,UAASC,GAAG,EAAE;EAE9D,IAAIA,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,EAAE;IACpBA,GAAG,GAAG,CAAC,EAAE,GAAGA,GAAG,EAAEC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC,MAAM,IAAID,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,CAAC,EAAE;IAC5BA,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAGA,GAAG,EAAEC,KAAK,CAAC,CAAC,CAAC;EACnC;EAEA,OAAOD,GAAG;AAEd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}