{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SashinTulsiram\\\\Documents\\\\Software\\\\react-frontend-bulma\\\\react-app\\\\src\\\\components\\\\TrustedLeadingBrandsAPI.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../bulma/css/bulma.min.css\";\nimport \"../App.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//import { SvgXml } from \"react-native-svg\";\nimport FilterBrands from \"./FilterBrands/FilterBrands\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrustedLeadingBrandsAPI() {\n  _s();\n  const parse = require(\"html-react-parser\");\n  const [data, setData] = useState([]);\n  const apiGet = () => {\n    fetch(\"http://127.0.0.1:5000/api_get_trusted_leading_brands\").then(respose => respose.json()).then(json => {\n      console.log(json);\n      setData(json);\n    });\n  };\n  useEffect(() => {\n    apiGet();\n  }, []);\n  const myData = data;\n  let [filterTextValue, updateFilterText] = useState(\"All\");\n  let filteredBrandList = myData.filter(product => {\n    if (filterTextValue === \"Primary\") {\n      return product.economic_sector_tb01 === \"Primary\";\n    } else if (filterTextValue === \"Secondary\") {\n      return product.economic_sector_tb01 === \"Secondary\";\n    } else if (filterTextValue === \"Tertiary\") {\n      return product.economic_sector_tb01 === \"Tertiary\";\n    } else {\n      return product;\n    }\n  });\n  function onFilterValueSelected(filterValue) {\n    filterTextValue(filterValue);\n    console.log(filterValue);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"TrustedBrandsIconContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sort and Filter component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FilterBrands, {\n          filterValueSelected: onFilterValueSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), myData.map(myData => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TrustedBrandsIcon\",\n        children: parse(myData.brand_image_tb01)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  /*\r\n  return (\r\n    <div>\r\n      <div>\r\n        MY API\r\n        <br />\r\n      </div>\r\n      <div>\r\n        {data.map((item) => (\r\n          <div>\r\n            <Convert string={item.brand_image_tb01} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );*/\n}\n_s(TrustedLeadingBrandsAPI, \"7GPujKjNqjgIAr4QUY4WJcAmvkw=\");\n_c = TrustedLeadingBrandsAPI;\nexport default TrustedLeadingBrandsAPI;\n\n/*\r\nconst TrustedLeadingBrandsAPI = () => {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5000/api_get_trusted_leading_brands\")\r\n      .then((response) => response.json())\r\n      .then((data) => setRecords(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {records.map((list, index) => (\r\n          <li key={index}>{list.id_tb01}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrustedLeadingBrandsAPI;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"TrustedLeadingBrandsAPI\");","map":{"version":3,"names":["React","useEffect","useState","FilterBrands","jsxDEV","_jsxDEV","TrustedLeadingBrandsAPI","_s","parse","require","data","setData","apiGet","fetch","then","respose","json","console","log","myData","filterTextValue","updateFilterText","filteredBrandList","filter","product","economic_sector_tb01","onFilterValueSelected","filterValue","children","class","fileName","_jsxFileName","lineNumber","columnNumber","filterValueSelected","map","className","brand_image_tb01","_c","$RefreshReg$"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/react-app/src/components/TrustedLeadingBrandsAPI.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../bulma/css/bulma.min.css\";\r\nimport \"../App.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n//import { SvgXml } from \"react-native-svg\";\r\nimport FilterBrands from \"./FilterBrands/FilterBrands\";\r\n\r\nfunction TrustedLeadingBrandsAPI() {\r\n  const parse = require(\"html-react-parser\");\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const apiGet = () => {\r\n    fetch(\"http://127.0.0.1:5000/api_get_trusted_leading_brands\")\r\n      .then((respose) => respose.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setData(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    apiGet();\r\n  }, []);\r\n\r\n  const myData = data;\r\n\r\n  let [filterTextValue, updateFilterText] = useState(\"All\");\r\n\r\n  let filteredBrandList = myData.filter((product) => {\r\n    if (filterTextValue === \"Primary\") {\r\n      return product.economic_sector_tb01 === \"Primary\";\r\n    } else if (filterTextValue === \"Secondary\") {\r\n      return product.economic_sector_tb01 === \"Secondary\";\r\n    } else if (filterTextValue === \"Tertiary\") {\r\n      return product.economic_sector_tb01 === \"Tertiary\";\r\n    } else {\r\n      return product;\r\n    }\r\n  });\r\n\r\n  function onFilterValueSelected(filterValue) {\r\n    filterTextValue(filterValue);\r\n    console.log(filterValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"TrustedBrandsIconContainer\">\r\n        <h2>Sort and Filter component</h2>\r\n        <div>\r\n          <FilterBrands filterValueSelected={onFilterValueSelected} />\r\n        </div>\r\n        {myData.map((myData) => (\r\n          <div className=\"TrustedBrandsIcon\">\r\n            {parse(myData.brand_image_tb01)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  /*\r\n  return (\r\n    <div>\r\n      <div>\r\n        MY API\r\n        <br />\r\n      </div>\r\n      <div>\r\n        {data.map((item) => (\r\n          <div>\r\n            <Convert string={item.brand_image_tb01} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );*/\r\n}\r\n\r\nexport default TrustedLeadingBrandsAPI;\r\n\r\n/*\r\nconst TrustedLeadingBrandsAPI = () => {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5000/api_get_trusted_leading_brands\")\r\n      .then((response) => response.json())\r\n      .then((data) => setRecords(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {records.map((list, index) => (\r\n          <li key={index}>{list.id_tb01}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrustedLeadingBrandsAPI;\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}