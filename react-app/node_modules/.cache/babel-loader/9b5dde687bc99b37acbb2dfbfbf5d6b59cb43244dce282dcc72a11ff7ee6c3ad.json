{"ast":null,"code":"module.exports = globSync;\nglobSync.GlobSync = GlobSync;\nvar fs = require('fs');\nvar minimatch = require('minimatch');\nvar Minimatch = minimatch.Minimatch;\nvar Glob = require('./glob.js').Glob;\nvar util = require('util');\nvar path = require('path');\nvar assert = require('assert');\nvar isAbsolute = require('path-is-absolute');\nvar common = require('./common.js');\nvar alphasort = common.alphasort;\nvar alphasorti = common.alphasorti;\nvar setopts = common.setopts;\nvar ownProp = common.ownProp;\nvar childrenIgnored = common.childrenIgnored;\nfunction globSync(pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  return new GlobSync(pattern, options).found;\n}\nfunction GlobSync(pattern, options) {\n  if (!pattern) throw new Error('must provide pattern');\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  if (!(this instanceof GlobSync)) return new GlobSync(pattern, options);\n  setopts(this, pattern, options);\n  if (this.noprocess) return this;\n  var n = this.minimatch.set.length;\n  this.matches = new Array(n);\n  for (var i = 0; i < n; i++) {\n    this._process(this.minimatch.set[i], i, false);\n  }\n  this._finish();\n}\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync);\n  if (this.realpath) {\n    var self = this;\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null);\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p);\n          var real = fs.realpathSync(p, self.realpathCache);\n          set[real] = true;\n        } catch (er) {\n          if (er.syscall === 'stat') set[self._makeAbs(p)] = true;else throw er;\n        }\n      }\n    });\n  }\n  common.finish(this);\n};\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync);\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0;\n  while (typeof pattern[n] === 'string') {\n    n++;\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix;\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index);\n      return;\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null;\n      break;\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/');\n      break;\n  }\n  var remain = pattern.slice(n);\n\n  // get the list of entries.\n  var read;\n  if (prefix === null) read = '.';else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix)) prefix = '/' + prefix;\n    read = prefix;\n  } else read = prefix;\n  var abs = this._makeAbs(read);\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read)) return;\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n  if (isGlobStar) this._processGlobStar(prefix, read, abs, remain, index, inGlobStar);else this._processReaddir(prefix, read, abs, remain, index, inGlobStar);\n};\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar);\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries) return;\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0];\n  var negate = !!this.minimatch.negate;\n  var rawGlob = pn._glob;\n  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n  var matchedEntries = [];\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i];\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m;\n      if (negate && !prefix) {\n        m = !e.match(pn);\n      } else {\n        m = e.match(pn);\n      }\n      if (m) matchedEntries.push(e);\n    }\n  }\n  var len = matchedEntries.length;\n  // If there are no matched entries, then nothing matches.\n  if (len === 0) return;\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index]) this.matches[index] = Object.create(null);\n    for (var i = 0; i < len; i++) {\n      var e = matchedEntries[i];\n      if (prefix) {\n        if (prefix.slice(-1) !== '/') e = prefix + '/' + e;else e = prefix + e;\n      }\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e);\n      }\n      this.matches[index][e] = true;\n    }\n    // This was the last one, and no stats were needed\n    return;\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift();\n  for (var i = 0; i < len; i++) {\n    var e = matchedEntries[i];\n    var newPattern;\n    if (prefix) newPattern = [prefix, e];else newPattern = [e];\n    this._process(newPattern.concat(remain), index, inGlobStar);\n  }\n};\nGlobSync.prototype._emitMatch = function (index, e) {\n  var abs = this._makeAbs(e);\n  if (this.mark) e = this._mark(e);\n  if (this.matches[index][e]) return;\n  if (this.nodir) {\n    var c = this.cache[this._makeAbs(e)];\n    if (c === 'DIR' || Array.isArray(c)) return;\n  }\n  this.matches[index][e] = true;\n  if (this.stat) this._stat(e);\n};\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow) return this._readdir(abs, false);\n  var entries;\n  var lstat;\n  var stat;\n  try {\n    lstat = fs.lstatSync(abs);\n  } catch (er) {\n    // lstat failed, doesn't exist\n    return null;\n  }\n  var isSym = lstat.isSymbolicLink();\n  this.symlinks[abs] = isSym;\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && !lstat.isDirectory()) this.cache[abs] = 'FILE';else entries = this._readdir(abs, false);\n  return entries;\n};\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries;\n  if (inGlobStar && !ownProp(this.symlinks, abs)) return this._readdirInGlobStar(abs);\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (!c || c === 'FILE') return null;\n    if (Array.isArray(c)) return c;\n  }\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs));\n  } catch (er) {\n    this._readdirError(abs, er);\n    return null;\n  }\n};\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i++) {\n      var e = entries[i];\n      if (abs === '/') e = abs + e;else e = abs + '/' + e;\n      this.cache[e] = true;\n    }\n  }\n  this.cache[abs] = entries;\n\n  // mark and cache dir-ness\n  return entries;\n};\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR':\n      // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE';\n      break;\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false;\n      break;\n    default:\n      // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false;\n      if (this.strict) throw er;\n      if (!this.silent) console.error('glob error', er);\n      break;\n  }\n};\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar);\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries) return;\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1);\n  var gspref = prefix ? [prefix] : [];\n  var noGlobStar = gspref.concat(remainWithoutGlobStar);\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false);\n  var len = entries.length;\n  var isSym = this.symlinks[abs];\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar) return;\n  for (var i = 0; i < len; i++) {\n    var e = entries[i];\n    if (e.charAt(0) === '.' && !this.dot) continue;\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n    this._process(instead, index, true);\n    var below = gspref.concat(entries[i], remain);\n    this._process(below, index, true);\n  }\n};\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix);\n  if (!this.matches[index]) this.matches[index] = Object.create(null);\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists) return;\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix);\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix);\n    } else {\n      prefix = path.resolve(this.root, prefix);\n      if (trail) prefix += '/';\n    }\n  }\n  if (process.platform === 'win32') prefix = prefix.replace(/\\\\/g, '/');\n\n  // Mark this as a match\n  this.matches[index][prefix] = true;\n};\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f);\n  var needDir = f.slice(-1) === '/';\n  if (f.length > this.maxLength) return false;\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (Array.isArray(c)) c = 'DIR';\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR') return c;\n    if (needDir && c === 'FILE') return false;\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists;\n  var stat = this.statCache[abs];\n  if (!stat) {\n    var lstat;\n    try {\n      lstat = fs.lstatSync(abs);\n    } catch (er) {\n      return false;\n    }\n    if (lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs);\n      } catch (er) {\n        stat = lstat;\n      }\n    } else {\n      stat = lstat;\n    }\n  }\n  this.statCache[abs] = stat;\n  var c = stat.isDirectory() ? 'DIR' : 'FILE';\n  this.cache[abs] = this.cache[abs] || c;\n  if (needDir && c !== 'DIR') return false;\n  return c;\n};\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p);\n};\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f);\n};","map":{"version":3,"names":["module","exports","globSync","GlobSync","fs","require","minimatch","Minimatch","Glob","util","path","assert","isAbsolute","common","alphasort","alphasorti","setopts","ownProp","childrenIgnored","pattern","options","arguments","length","TypeError","found","Error","noprocess","n","set","matches","Array","i","_process","_finish","prototype","realpath","self","forEach","matchset","index","Object","create","p","_makeAbs","real","realpathSync","realpathCache","er","syscall","finish","inGlobStar","prefix","_processSimple","join","slice","remain","read","abs","isGlobStar","GLOBSTAR","_processGlobStar","_processReaddir","entries","_readdir","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","e","m","match","push","len","mark","stat","nomount","root","shift","newPattern","concat","_emitMatch","_mark","nodir","c","cache","isArray","_stat","_readdirInGlobStar","follow","lstat","lstatSync","isSym","isSymbolicLink","symlinks","isDirectory","_readdirEntries","readdirSync","_readdirError","f","code","strict","silent","console","error","remainWithoutGlobStar","gspref","noGlobStar","instead","below","exists","trail","test","resolve","process","platform","replace","needDir","maxLength","statCache","statSync","makeAbs"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/react-svg-converter/node_modules/glob/sync.js"],"sourcesContent":["module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = fs.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this.matches[index][e] = true\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  var abs = this._makeAbs(e)\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[this._makeAbs(e)]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    // lstat failed, doesn't exist\n    return null\n  }\n\n  var isSym = lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this.matches[index][prefix] = true\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      return false\n    }\n\n    if (lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}