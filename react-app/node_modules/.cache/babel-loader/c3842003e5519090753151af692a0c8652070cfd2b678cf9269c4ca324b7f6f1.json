{"ast":null,"code":"'use strict';\n\n/*\n * Thanks to http://fontello.com project for sponsoring this plugin\n */\nexports.type = 'full';\nexports.active = false;\nexports.description = 'performs a set of operations on SVG with one path inside (disabled by default)';\nexports.params = {\n  // width and height to resize SVG and rescale inner Path\n  width: false,\n  height: false,\n  // scale inner Path without resizing SVG\n  scale: false,\n  // shiftX/Y inner Path\n  shiftX: false,\n  shiftY: false,\n  // crop SVG width along the real width of inner Path\n  hcrop: false,\n  // vertical center inner Path inside SVG height\n  vcenter: false,\n  // stringify params\n  floatPrecision: 3,\n  leadingZero: true,\n  negativeExtraSpace: true\n};\nvar _path = require('./_path.js'),\n  relative2absolute = _path.relative2absolute,\n  computeCubicBoundingBox = _path.computeCubicBoundingBox,\n  computeQuadraticBoundingBox = _path.computeQuadraticBoundingBox,\n  applyTransforms = _path.applyTransforms,\n  js2path = _path.js2path,\n  path2js = _path.path2js,\n  EXTEND = require('whet.extend');\nexports.fn = function (data, params) {\n  data.content.forEach(function (item) {\n    // only for SVG with one Path inside\n    if (item.isElem('svg') && item.content.length === 1 && item.content[0].isElem('path')) {\n      var svgElem = item,\n        pathElem = svgElem.content[0],\n        // get absoluted Path data\n        path = relative2absolute(EXTEND(true, [], path2js(pathElem))),\n        xs = [],\n        ys = [],\n        cubicСontrolPoint = [0, 0],\n        quadraticСontrolPoint = [0, 0],\n        lastPoint = [0, 0],\n        cubicBoundingBox,\n        quadraticBoundingBox,\n        i,\n        segment;\n      path.forEach(function (pathItem) {\n        // ML\n        if ('ML'.indexOf(pathItem.instruction) > -1) {\n          for (i = 0; i < pathItem.data.length; i++) {\n            if (i % 2 === 0) {\n              xs.push(pathItem.data[i]);\n            } else {\n              ys.push(pathItem.data[i]);\n            }\n          }\n          lastPoint = cubicСontrolPoint = quadraticСontrolPoint = pathItem.data.slice(-2);\n\n          // H\n        } else if (pathItem.instruction === 'H') {\n          pathItem.data.forEach(function (d) {\n            xs.push(d);\n          });\n          lastPoint[0] = cubicСontrolPoint[0] = quadraticСontrolPoint[0] = pathItem.data[pathItem.data.length - 2];\n\n          // V\n        } else if (pathItem.instruction === 'V') {\n          pathItem.data.forEach(function (d) {\n            ys.push(d);\n          });\n          lastPoint[1] = cubicСontrolPoint[1] = quadraticСontrolPoint[1] = pathItem.data[pathItem.data.length - 1];\n\n          // C\n        } else if (pathItem.instruction === 'C') {\n          for (i = 0; i < pathItem.data.length; i += 6) {\n            segment = pathItem.data.slice(i, i + 6);\n            cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(segment));\n            xs.push(cubicBoundingBox.minx);\n            xs.push(cubicBoundingBox.maxx);\n            ys.push(cubicBoundingBox.miny);\n            ys.push(cubicBoundingBox.maxy);\n\n            // reflected control point for the next possible S\n            cubicСontrolPoint = [2 * segment[4] - segment[2], 2 * segment[5] - segment[3]];\n            lastPoint = segment.slice(-2);\n          }\n\n          // S\n        } else if (pathItem.instruction === 'S') {\n          for (i = 0; i < pathItem.data.length; i += 4) {\n            segment = pathItem.data.slice(i, i + 4);\n            cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(cubicСontrolPoint).concat(segment));\n            xs.push(cubicBoundingBox.minx);\n            xs.push(cubicBoundingBox.maxx);\n            ys.push(cubicBoundingBox.miny);\n            ys.push(cubicBoundingBox.maxy);\n\n            // reflected control point for the next possible S\n            cubicСontrolPoint = [2 * segment[2] - cubicСontrolPoint[0], 2 * segment[3] - cubicСontrolPoint[1]];\n            lastPoint = segment.slice(-2);\n          }\n\n          // Q\n        } else if (pathItem.instruction === 'Q') {\n          for (i = 0; i < pathItem.data.length; i += 4) {\n            segment = pathItem.data.slice(i, i + 4);\n            quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(segment));\n            xs.push(quadraticBoundingBox.minx);\n            xs.push(quadraticBoundingBox.maxx);\n            ys.push(quadraticBoundingBox.miny);\n            ys.push(quadraticBoundingBox.maxy);\n\n            // reflected control point for the next possible T\n            quadraticСontrolPoint = [2 * segment[2] - segment[0], 2 * segment[3] - segment[1]];\n            lastPoint = segment.slice(-2);\n          }\n\n          // S\n        } else if (pathItem.instruction === 'T') {\n          for (i = 0; i < pathItem.data.length; i += 2) {\n            segment = pathItem.data.slice(i, i + 2);\n            quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(quadraticСontrolPoint).concat(segment));\n            xs.push(quadraticBoundingBox.minx);\n            xs.push(quadraticBoundingBox.maxx);\n            ys.push(quadraticBoundingBox.miny);\n            ys.push(quadraticBoundingBox.maxy);\n\n            // reflected control point for the next possible T\n            quadraticСontrolPoint = [2 * segment[0] - quadraticСontrolPoint[0], 2 * segment[1] - quadraticСontrolPoint[1]];\n            lastPoint = segment.slice(-2);\n          }\n        }\n      });\n      var xmin = Math.min.apply(this, xs).toFixed(params.floatPrecision),\n        xmax = Math.max.apply(this, xs).toFixed(params.floatPrecision),\n        ymin = Math.min.apply(this, ys).toFixed(params.floatPrecision),\n        ymax = Math.max.apply(this, ys).toFixed(params.floatPrecision),\n        svgWidth = +svgElem.attr('width').value,\n        svgHeight = +svgElem.attr('height').value,\n        realWidth = Math.round(xmax - xmin),\n        realHeight = Math.round(ymax - ymin),\n        transform = '',\n        scale;\n\n      // width & height\n      if (params.width && params.height) {\n        scale = Math.min(params.width / svgWidth, params.height / svgHeight);\n        realWidth = realWidth * scale;\n        realHeight = realHeight * scale;\n        svgWidth = svgElem.attr('width').value = params.width;\n        svgHeight = svgElem.attr('height').value = params.height;\n        transform += ' scale(' + scale + ')';\n\n        // width\n      } else if (params.width && !params.height) {\n        scale = params.width / svgWidth;\n        realWidth = realWidth * scale;\n        realHeight = realHeight * scale;\n        svgWidth = svgElem.attr('width').value = params.width;\n        svgHeight = svgElem.attr('height').value = svgHeight * scale;\n        transform += ' scale(' + scale + ')';\n\n        // height\n      } else if (params.height && !params.width) {\n        scale = params.height / svgHeight;\n        realWidth = realWidth * scale;\n        realHeight = realHeight * scale;\n        svgWidth = svgElem.attr('width').value = svgWidth * scale;\n        svgHeight = svgElem.attr('height').value = params.height;\n        transform += ' scale(' + scale + ')';\n      }\n\n      // shiftX\n      if (params.shiftX) {\n        transform += ' translate(' + realWidth * params.shiftX + ', 0)';\n      }\n\n      // shiftY\n      if (params.shiftY) {\n        transform += ' translate(0, ' + realHeight * params.shiftY + ')';\n      }\n\n      // scale\n      if (params.scale) {\n        scale = params.scale;\n        var shiftX = svgWidth / 2,\n          shiftY = svgHeight / 2;\n        realWidth = realWidth * scale;\n        realHeight = realHeight * scale;\n        if (params.shiftX || params.shiftY) {\n          transform += ' scale(' + scale + ')';\n        } else {\n          transform += ' translate(' + shiftX + ' ' + shiftY + ') scale(' + scale + ') translate(-' + shiftX + ' -' + shiftY + ')';\n        }\n      }\n\n      // hcrop\n      if (params.hcrop) {\n        transform += ' translate(' + -xmin + ' 0)';\n        svgElem.attr('width').value = realWidth;\n      }\n\n      // vcenter\n      if (params.vcenter) {\n        transform += ' translate(0 ' + ((svgHeight - realHeight) / 2 - ymin) + ')';\n      }\n      if (transform) {\n        pathElem.addAttr({\n          name: 'transform',\n          prefix: '',\n          local: 'transform',\n          value: transform\n        });\n        path = applyTransforms(pathElem, pathElem.pathJS, true, params.floatPrecision);\n\n        // transformed data rounding\n        path.forEach(function (pathItem) {\n          if (pathItem.data) {\n            pathItem.data = pathItem.data.map(function (num) {\n              return +num.toFixed(params.floatPrecision);\n            });\n          }\n        });\n\n        // save new\n        js2path(pathElem, path, params);\n      }\n    }\n  });\n  return data;\n};","map":{"version":3,"names":["exports","type","active","description","params","width","height","scale","shiftX","shiftY","hcrop","vcenter","floatPrecision","leadingZero","negativeExtraSpace","_path","require","relative2absolute","computeCubicBoundingBox","computeQuadraticBoundingBox","applyTransforms","js2path","path2js","EXTEND","fn","data","content","forEach","item","isElem","length","svgElem","pathElem","path","xs","ys","cubicСontrolPoint","quadraticСontrolPoint","lastPoint","cubicBoundingBox","quadraticBoundingBox","i","segment","pathItem","indexOf","instruction","push","slice","d","apply","concat","minx","maxx","miny","maxy","xmin","Math","min","toFixed","xmax","max","ymin","ymax","svgWidth","attr","value","svgHeight","realWidth","round","realHeight","transform","addAttr","name","prefix","local","pathJS","map","num"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/plugins/transformsWithOnePath.js"],"sourcesContent":["'use strict';\n\n/*\n * Thanks to http://fontello.com project for sponsoring this plugin\n */\n\nexports.type = 'full';\n\nexports.active = false;\n\nexports.description = 'performs a set of operations on SVG with one path inside (disabled by default)';\n\nexports.params = {\n    // width and height to resize SVG and rescale inner Path\n    width: false,\n    height: false,\n\n    // scale inner Path without resizing SVG\n    scale: false,\n\n    // shiftX/Y inner Path\n    shiftX: false,\n    shiftY: false,\n\n    // crop SVG width along the real width of inner Path\n    hcrop: false,\n\n    // vertical center inner Path inside SVG height\n    vcenter: false,\n\n    // stringify params\n    floatPrecision: 3,\n    leadingZero: true,\n    negativeExtraSpace: true\n};\n\nvar _path = require('./_path.js'),\n    relative2absolute = _path.relative2absolute,\n    computeCubicBoundingBox = _path.computeCubicBoundingBox,\n    computeQuadraticBoundingBox = _path.computeQuadraticBoundingBox,\n    applyTransforms = _path.applyTransforms,\n    js2path = _path.js2path,\n    path2js = _path.path2js,\n    EXTEND = require('whet.extend');\n\nexports.fn = function(data, params) {\n\n    data.content.forEach(function(item) {\n\n        // only for SVG with one Path inside\n        if (item.isElem('svg') &&\n            item.content.length === 1 &&\n            item.content[0].isElem('path')\n        ) {\n\n            var svgElem = item,\n                pathElem = svgElem.content[0],\n                // get absoluted Path data\n                path = relative2absolute(EXTEND(true, [], path2js(pathElem))),\n                xs = [],\n                ys = [],\n                cubicСontrolPoint = [0, 0],\n                quadraticСontrolPoint = [0, 0],\n                lastPoint = [0, 0],\n                cubicBoundingBox,\n                quadraticBoundingBox,\n                i,\n                segment;\n\n            path.forEach(function(pathItem) {\n\n                // ML\n                if ('ML'.indexOf(pathItem.instruction) > -1) {\n\n                    for (i = 0; i < pathItem.data.length; i++) {\n                        if (i % 2 === 0) {\n                            xs.push(pathItem.data[i]);\n                        } else {\n                            ys.push(pathItem.data[i]);\n                        }\n                    }\n\n                    lastPoint = cubicСontrolPoint = quadraticСontrolPoint = pathItem.data.slice(-2);\n\n                // H\n                } else if (pathItem.instruction === 'H') {\n\n                    pathItem.data.forEach(function(d) {\n                        xs.push(d);\n                    });\n\n                    lastPoint[0] = cubicСontrolPoint[0] = quadraticСontrolPoint[0] = pathItem.data[pathItem.data.length - 2];\n\n                // V\n                } else if (pathItem.instruction === 'V') {\n\n                    pathItem.data.forEach(function(d) {\n                        ys.push(d);\n                    });\n\n                    lastPoint[1] = cubicСontrolPoint[1] = quadraticСontrolPoint[1] = pathItem.data[pathItem.data.length - 1];\n\n                // C\n                } else if (pathItem.instruction === 'C') {\n\n                    for (i = 0; i < pathItem.data.length; i += 6) {\n\n                        segment = pathItem.data.slice(i, i + 6);\n\n                        cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(segment));\n\n                        xs.push(cubicBoundingBox.minx);\n                        xs.push(cubicBoundingBox.maxx);\n\n                        ys.push(cubicBoundingBox.miny);\n                        ys.push(cubicBoundingBox.maxy);\n\n                        // reflected control point for the next possible S\n                        cubicСontrolPoint = [\n                            2 * segment[4] - segment[2],\n                            2 * segment[5] - segment[3]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // S\n                } else if (pathItem.instruction === 'S') {\n\n                    for (i = 0; i < pathItem.data.length; i += 4) {\n\n                        segment = pathItem.data.slice(i, i + 4);\n\n                        cubicBoundingBox = computeCubicBoundingBox.apply(this, lastPoint.concat(cubicСontrolPoint).concat(segment));\n\n                        xs.push(cubicBoundingBox.minx);\n                        xs.push(cubicBoundingBox.maxx);\n\n                        ys.push(cubicBoundingBox.miny);\n                        ys.push(cubicBoundingBox.maxy);\n\n                        // reflected control point for the next possible S\n                        cubicСontrolPoint = [\n                            2 * segment[2] - cubicСontrolPoint[0],\n                            2 * segment[3] - cubicСontrolPoint[1],\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // Q\n                } else if (pathItem.instruction === 'Q') {\n\n                    for (i = 0; i < pathItem.data.length; i += 4) {\n\n                        segment = pathItem.data.slice(i, i + 4);\n\n                        quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(segment));\n\n                        xs.push(quadraticBoundingBox.minx);\n                        xs.push(quadraticBoundingBox.maxx);\n\n                        ys.push(quadraticBoundingBox.miny);\n                        ys.push(quadraticBoundingBox.maxy);\n\n                        // reflected control point for the next possible T\n                        quadraticСontrolPoint = [\n                            2 * segment[2] - segment[0],\n                            2 * segment[3] - segment[1]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                // S\n                } else if (pathItem.instruction === 'T') {\n\n                    for (i = 0; i < pathItem.data.length; i += 2) {\n\n                        segment = pathItem.data.slice(i, i + 2);\n\n                        quadraticBoundingBox = computeQuadraticBoundingBox.apply(this, lastPoint.concat(quadraticСontrolPoint).concat(segment));\n\n                        xs.push(quadraticBoundingBox.minx);\n                        xs.push(quadraticBoundingBox.maxx);\n\n                        ys.push(quadraticBoundingBox.miny);\n                        ys.push(quadraticBoundingBox.maxy);\n\n                        // reflected control point for the next possible T\n                        quadraticСontrolPoint = [\n                            2 * segment[0] - quadraticСontrolPoint[0],\n                            2 * segment[1] - quadraticСontrolPoint[1]\n                        ];\n\n                        lastPoint = segment.slice(-2);\n\n                    }\n\n                }\n\n            });\n\n            var xmin = Math.min.apply(this, xs).toFixed(params.floatPrecision),\n                xmax = Math.max.apply(this, xs).toFixed(params.floatPrecision),\n                ymin = Math.min.apply(this, ys).toFixed(params.floatPrecision),\n                ymax = Math.max.apply(this, ys).toFixed(params.floatPrecision),\n                svgWidth = +svgElem.attr('width').value,\n                svgHeight = +svgElem.attr('height').value,\n                realWidth = Math.round(xmax - xmin),\n                realHeight = Math.round(ymax - ymin),\n                transform = '',\n                scale;\n\n            // width & height\n            if (params.width && params.height) {\n\n                scale = Math.min(params.width / svgWidth, params.height / svgHeight);\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = params.width;\n                svgHeight = svgElem.attr('height').value = params.height;\n\n                transform += ' scale(' + scale + ')';\n\n            // width\n            } else if (params.width && !params.height) {\n\n                scale = params.width / svgWidth;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = params.width;\n                svgHeight = svgElem.attr('height').value = svgHeight * scale;\n\n                transform += ' scale(' + scale + ')';\n\n            // height\n            } else if (params.height && !params.width) {\n\n                scale = params.height / svgHeight;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                svgWidth = svgElem.attr('width').value = svgWidth * scale;\n                svgHeight = svgElem.attr('height').value = params.height;\n\n                transform += ' scale(' + scale + ')';\n\n            }\n\n            // shiftX\n            if (params.shiftX) {\n                transform += ' translate(' + realWidth * params.shiftX + ', 0)';\n            }\n\n            // shiftY\n            if (params.shiftY) {\n                transform += ' translate(0, ' + realHeight * params.shiftY + ')';\n            }\n\n            // scale\n            if (params.scale) {\n                scale = params.scale;\n\n                var shiftX = svgWidth / 2,\n                    shiftY = svgHeight / 2;\n\n                realWidth = realWidth * scale;\n                realHeight = realHeight * scale;\n\n                if (params.shiftX || params.shiftY) {\n                    transform += ' scale(' + scale + ')';\n                } else {\n                    transform += ' translate(' + shiftX + ' ' + shiftY + ') scale(' + scale + ') translate(-' + shiftX + ' -' + shiftY + ')';\n                }\n            }\n\n            // hcrop\n            if (params.hcrop) {\n                transform += ' translate(' + (-xmin) + ' 0)';\n\n                svgElem.attr('width').value = realWidth;\n            }\n\n            // vcenter\n            if (params.vcenter) {\n                transform += ' translate(0 ' + (((svgHeight - realHeight) / 2) - ymin) + ')';\n            }\n\n            if (transform) {\n                pathElem.addAttr({\n                    name: 'transform',\n                    prefix: '',\n                    local: 'transform',\n                    value: transform\n                });\n\n                path = applyTransforms(pathElem, pathElem.pathJS, true, params.floatPrecision);\n\n                // transformed data rounding\n                path.forEach(function(pathItem) {\n                    if (pathItem.data) {\n                        pathItem.data = pathItem.data.map(function(num) {\n                            return +num.toFixed(params.floatPrecision);\n                        });\n                    }\n                });\n\n                // save new\n                js2path(pathElem, path, params);\n            }\n\n        }\n\n    });\n\n    return data;\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}