{"ast":null,"code":"'use strict';\n\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\nmodule.exports = function (data, plugins) {\n  plugins.forEach(function (group) {\n    switch (group[0].type) {\n      case 'perItem':\n        data = perItem(data, group);\n        break;\n      case 'perItemReverse':\n        data = perItem(data, group, true);\n        break;\n      case 'full':\n        data = full(data, group);\n        break;\n    }\n  });\n  return data;\n};\n\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\nfunction perItem(data, plugins, reverse) {\n  function monkeys(items) {\n    items.content = items.content.filter(function (item) {\n      // reverse pass\n      if (reverse && item.content && item.elem != 'foreignObject') {\n        monkeys(item);\n      }\n\n      // main filter\n      var filter = true;\n      for (var i = 0; filter && i < plugins.length; i++) {\n        var plugin = plugins[i];\n        if (plugin.active && plugin.fn(item, plugin.params) === false) {\n          filter = false;\n        }\n      }\n\n      // direct pass\n      if (!reverse && item.content && item.elem != 'foreignObject') {\n        monkeys(item);\n      }\n      return filter;\n    });\n    return items;\n  }\n  return monkeys(data);\n}\n\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\nfunction full(data, plugins) {\n  plugins.forEach(function (plugin) {\n    if (plugin.active) {\n      data = plugin.fn(data, plugin.params);\n    }\n  });\n  return data;\n}","map":{"version":3,"names":["module","exports","data","plugins","forEach","group","type","perItem","full","reverse","monkeys","items","content","filter","item","elem","i","length","plugin","active","fn","params"],"sources":["C:/Users/SashinTulsiram/Documents/Software/react-frontend-bulma/node_modules/svgo/lib/svgo/plugins.js"],"sourcesContent":["'use strict';\n\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\nmodule.exports = function(data, plugins) {\n\n    plugins.forEach(function(group) {\n\n        switch(group[0].type) {\n            case 'perItem':\n                data = perItem(data, group);\n                break;\n            case 'perItemReverse':\n                data = perItem(data, group, true);\n                break;\n            case 'full':\n                data = full(data, group);\n                break;\n        }\n\n    });\n\n    return data;\n\n};\n\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\nfunction perItem(data, plugins, reverse) {\n\n    function monkeys(items) {\n\n        items.content = items.content.filter(function(item) {\n\n            // reverse pass\n            if (reverse && item.content && item.elem != 'foreignObject') {\n                monkeys(item);\n            }\n\n            // main filter\n            var filter = true;\n\n            for (var i = 0; filter && i < plugins.length; i++) {\n                var plugin = plugins[i];\n\n                if (plugin.active && plugin.fn(item, plugin.params) === false) {\n                    filter = false;\n                }\n            }\n\n            // direct pass\n            if (!reverse && item.content && item.elem != 'foreignObject') {\n                monkeys(item);\n            }\n\n            return filter;\n\n        });\n\n        return items;\n\n    }\n\n    return monkeys(data);\n\n}\n\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\nfunction full(data, plugins) {\n\n    plugins.forEach(function(plugin) {\n        if (plugin.active) {\n            data = plugin.fn(data, plugin.params);\n        }\n    });\n\n    return data;\n\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAE;EAErCA,OAAO,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;IAE5B,QAAOA,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;MAChB,KAAK,SAAS;QACVJ,IAAI,GAAGK,OAAO,CAACL,IAAI,EAAEG,KAAK,CAAC;QAC3B;MACJ,KAAK,gBAAgB;QACjBH,IAAI,GAAGK,OAAO,CAACL,IAAI,EAAEG,KAAK,EAAE,IAAI,CAAC;QACjC;MACJ,KAAK,MAAM;QACPH,IAAI,GAAGM,IAAI,CAACN,IAAI,EAAEG,KAAK,CAAC;QACxB;IACR;EAEJ,CAAC,CAAC;EAEF,OAAOH,IAAI;AAEf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,OAAOA,CAACL,IAAI,EAAEC,OAAO,EAAEM,OAAO,EAAE;EAErC,SAASC,OAAOA,CAACC,KAAK,EAAE;IAEpBA,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,UAASC,IAAI,EAAE;MAEhD;MACA,IAAIL,OAAO,IAAIK,IAAI,CAACF,OAAO,IAAIE,IAAI,CAACC,IAAI,IAAI,eAAe,EAAE;QACzDL,OAAO,CAACI,IAAI,CAAC;MACjB;;MAEA;MACA,IAAID,MAAM,GAAG,IAAI;MAEjB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEH,MAAM,IAAIG,CAAC,GAAGb,OAAO,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;QAC/C,IAAIE,MAAM,GAAGf,OAAO,CAACa,CAAC,CAAC;QAEvB,IAAIE,MAAM,CAACC,MAAM,IAAID,MAAM,CAACE,EAAE,CAACN,IAAI,EAAEI,MAAM,CAACG,MAAM,CAAC,KAAK,KAAK,EAAE;UAC3DR,MAAM,GAAG,KAAK;QAClB;MACJ;;MAEA;MACA,IAAI,CAACJ,OAAO,IAAIK,IAAI,CAACF,OAAO,IAAIE,IAAI,CAACC,IAAI,IAAI,eAAe,EAAE;QAC1DL,OAAO,CAACI,IAAI,CAAC;MACjB;MAEA,OAAOD,MAAM;IAEjB,CAAC,CAAC;IAEF,OAAOF,KAAK;EAEhB;EAEA,OAAOD,OAAO,CAACR,IAAI,CAAC;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,IAAIA,CAACN,IAAI,EAAEC,OAAO,EAAE;EAEzBA,OAAO,CAACC,OAAO,CAAC,UAASc,MAAM,EAAE;IAC7B,IAAIA,MAAM,CAACC,MAAM,EAAE;MACfjB,IAAI,GAAGgB,MAAM,CAACE,EAAE,CAAClB,IAAI,EAAEgB,MAAM,CAACG,MAAM,CAAC;IACzC;EACJ,CAAC,CAAC;EAEF,OAAOnB,IAAI;AAEf"},"metadata":{},"sourceType":"script","externalDependencies":[]}